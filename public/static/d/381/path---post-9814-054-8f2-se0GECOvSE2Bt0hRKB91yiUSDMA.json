{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"thelastpickle/docker-cassandra-bootstrap","alternative_id":9814,"content":"<p>A new blog post covering each of the main components of this project can be found here:</p><p><a href=\"http://thelastpickle.com/blog/2018/01/23/docker-meet-cassandra.html\" rel=\"nofollow\">http://thelastpickle.com/blog/2018/01/23/docker-meet-cassandra.html</a></p><div class=\"highlight highlight-source-shell\"><pre>git clone git@github.com:thelastpickle/docker-cassandra-bootstrap.git\ncd docker-cassandra-bootstrap\ncp .env.template .env\ndocker-compose build</pre></div><p>If you would like to see a hosted log service interact seemlessly with this\nDocker Compose stack, sign up for <a href=\"https://papertrailapp.com/?thank=1ad15b\" rel=\"nofollow\">Papertrail</a>.</p><p>Then find your specific port number by looking at your\n<a href=\"https://papertrailapp.com/account/destinations\" rel=\"nofollow\">Log Destinations</a> and update\nyour <code>.env</code> setting accordingly.</p><div class=\"highlight highlight-source-shell\"><pre># turn off all running Docker containers\ndocker-compose down\n# delete any persistent data\nrm -rf data/\n# rebuild the images\ndocker-compose build</pre></div><p>Start our Docker-integrated logging connector:</p><div class=\"highlight highlight-source-shell\"><pre># start Docker logging connector\ndocker-compose up logspout\n# view logging HTTP endpoint\ncurl http://localhost:8000/logs</pre></div><p>Start Cassandra and setup the required schema:</p><div class=\"highlight highlight-source-shell\"><pre># start Cassandra\ndocker-compose up cassandra\n# view cluster status\ndocker-compose run nodetool status\n# create schema\ndocker-compose run cqlsh -f /schema.cql\n# confirm schema\ndocker-compose run cqlsh -e \"DESCRIBE SCHEMA;\"</pre></div><p>Start Reaper for Apache Cassandra and monitor your new cluster:</p><div class=\"highlight highlight-source-shell\"><pre># start Reaper for Apache Cassandra\ndocker-compose up cassandra-reaper\nopen http://localhost:8080/webui/\n# add one-off repair\n# add scheduled repair</pre></div><p>Start Prometheus and become familiar with the UI:</p><div class=\"highlight highlight-source-shell\"><pre># start Prometheus\ndocker-compose up prometheus\nopen http://localhost:9090</pre></div><p>Start Grafana, connect it to the Prometheus data source, and upload the TLP\nDashboards.</p><div class=\"highlight highlight-source-shell\"><pre># start Grafana\ndocker-compose up grafana\n# create \n./grafana/bin/create-data-sources.sh\n# user/pass: admin/admin\nopen http://localhost:3000\n# upload dashboards\n./grafana/bin/upload-dashboards.sh</pre></div><p>Generate fake workforce and activity:</p><div class=\"highlight highlight-source-shell\"><pre>docker-compose run pickle-factory</pre></div><p>Sample timesheets:</p><div class=\"highlight highlight-source-shell\"><pre>docker-compose run pickle-shop</pre></div>"}}]}},"pageContext":{"alternative_id":9814}}