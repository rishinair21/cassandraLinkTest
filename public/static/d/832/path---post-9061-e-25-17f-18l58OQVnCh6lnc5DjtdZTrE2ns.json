{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"What is the SMACK Stack!?","alternative_id":9061,"content":"<div class=\"section-inner sectionLayout--insetColumn\"><h1 id=\"092b\" class=\"graf graf--h3 graf--leading graf--title\">What is the SMACK Stack!?</h1><figure id=\"4918\" class=\"graf graf--figure graf-after--h3\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"1*yQZt17wm6s3OGeFB8iyU7g.png\" data-width=\"800\" data-height=\"388\" data-is-featured=\"true\" data-action=\"zoom\" data-action-value=\"1*yQZt17wm6s3OGeFB8iyU7g.png\" src=\"https://cdn-images-1.medium.com/max/1600/1*yQZt17wm6s3OGeFB8iyU7g.png\" alt=\"image\" /></div></div></figure><p id=\"51d9\" class=\"graf graf--p graf-after--figure\">The SMACK stack is a group of tools that I have seen popping up more and more recently. I am very excited about this technology stack because it brings together a few of my favorite tools. The SMACK stack makes it easy to build powerful and scalable applications. Over the next few weeks I’m going to be writing various articles discussing each part of the SMACK stack.</p><p id=\"b575\" class=\"graf graf--p graf-after--p\">To kick off this new series, I want to get started by talking about the purpose of the SMACK stack. Then I will do a skin deep introduction to the five tools that make up the stack.</p><p id=\"4c2e\" class=\"graf graf--p graf-after--p\">Let’s say you wanted to build a new dating app. Something identical to other apps on the market. You need to be able to see who is in your area, swipe right and left, and chat. Your decide to take advantage of some tech within your comfort zone.</p><figure id=\"4482\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*v4cnSn8wR6r7oYA1.\" data-width=\"892\" data-height=\"355\" data-action=\"zoom\" data-action-value=\"0*v4cnSn8wR6r7oYA1.\" src=\"https://cdn-images-1.medium.com/max/1600/0*v4cnSn8wR6r7oYA1.\" alt=\"image\" /></div></div></figure><p id=\"fd2a\" class=\"graf graf--p graf-after--figure\">Apache Tomcat as the app server, a java application to write your code, and postgres as your database. All this running on top of a linux server.</p><p id=\"5cc2\" class=\"graf graf--p graf-after--p\">Your first priority when building this new application is getting it work. You need to store the profile information for all your customers and as well as what people swipe. You will also need to be able to quickly deliver new recommendations to people using the app. You work for a few weeks to build out all this logic in Java and store the data in postgres. For months everything is running great but then it happens. You go viral!</p><p id=\"2fcd\" class=\"graf graf--p graf-after--p\">Everyone loves you app and traffic has explodes! Your java application is bursting at the seams. Postgres can’t handle the transactions comes screeching to a halt. You’re left with two options. You can migrate everything to massive cloud machine which will cost cost a pretty penny. But even that it’s a temporary solution. Your left having to redesign your application from the ground up.</p><p id=\"dba1\" class=\"graf graf--p graf-after--p\">I bet you wish you had thought about scalability day one. Todays technology consumers have high expectations for your the functionality and performance of the tools they use.</p><p id=\"46ec\" class=\"graf graf--p graf-after--p\">So what is a systems architect to do?</p><figure id=\"10f9\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*jvt55H6gIH9YqPTJ.\" data-width=\"892\" data-height=\"439\" data-action=\"zoom\" data-action-value=\"0*jvt55H6gIH9YqPTJ.\" src=\"https://cdn-images-1.medium.com/max/1600/0*jvt55H6gIH9YqPTJ.\" alt=\"image\" /></div></div></figure><p id=\"75e9\" class=\"graf graf--p graf-after--figure\">In walks the SMACK stack! The SMACK stack is made up of 5 different tools covering different areas. Spark, Mesos, Akka, Cassandra, and Kafka. The stack as a whole handles big data batch processing, stream processing, distributed queuing, serverless development, and distributed storage all running on top of a scalable infrastructure. The cherry on top, all these tools are all Open Source, have amazing documentation, and great support communities!</p><p id=\"0308\" class=\"graf graf--p graf-after--p\">For the rest of this article I will touch on each tool in the SMACK stack. By the end I hope you will be as excited about these tools as I am.</p><figure id=\"034b\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*seVfV_Mx7-g_m3MF.\" data-width=\"461\" data-height=\"240\" src=\"https://cdn-images-1.medium.com/max/1600/0*seVfV_Mx7-g_m3MF.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://spark.apache.org/\" data-href=\"http://spark.apache.org/\" class=\"markup--anchor markup--figure-anchor\" rel=\"noopener nofollow\" target=\"_blank\">http://spark.apache.org/</a></figcaption></div></figure><p id=\"64f7\" class=\"graf graf--p graf-after--figure\">The first tool in the SMACK stack is Apache Spark. I will be completely honest and say I am biased when it comes to this tool. I love it!! Apache Spark is a distributed batch and stream processing tool built as a successor to Hadoop.</p><p id=\"910e\" class=\"graf graf--p graf-after--p\">The Berkeley AmpLab developed Apache Spark as a next generation alternative to Hadoop. Apache Spark takes advantage of modern hardware improvements to deliver lightning speeds. Apache Spark is also easy to use with APIs written in Java, Scala, R, and Python.</p><figure id=\"6faf\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*KtyiZPqrXCFl7VI9.\" data-width=\"1024\" data-height=\"879\" data-action=\"zoom\" data-action-value=\"0*KtyiZPqrXCFl7VI9.\" src=\"https://cdn-images-1.medium.com/max/1600/0*KtyiZPqrXCFl7VI9.\" alt=\"image\" /></div></div></figure><p id=\"95d9\" class=\"graf graf--p graf-after--figure graf--trailing\">Spark relies on one simple concept, divide and conquer. When a task seems overwhelming, one approach is to split that large task into the smallest possible pieces. Apache Spark leverages a cluster of machines to execute a massive number of simple operations on a data set. These simple operations add up to sophisticated jobs on huge amounts of data.</p></div><div class=\"section-inner sectionLayout--insetColumn\"><figure id=\"d75a\" class=\"graf graf--figure graf--leading\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*SQAY6DL2QkkMShao.\" data-width=\"460\" data-height=\"240\" src=\"https://cdn-images-1.medium.com/max/1600/0*SQAY6DL2QkkMShao.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://mesos.apache.org/\" data-href=\"http://mesos.apache.org/\" class=\"markup--anchor markup--figure-anchor\" rel=\"noopener nofollow\" target=\"_blank\">http://mesos.apache.org</a></figcaption></div></figure><p id=\"955b\" class=\"graf graf--p graf-after--figure\">Apache Mesos is the platform on which everything runs. Think of Apache Mesos as an operating system for distributed systems. Mesos runs on a cluster of machines and delegates work where resources are free.</p><figure id=\"d45f\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*wntCpqf6uvdsujtC.\" data-width=\"836\" data-height=\"563\" data-action=\"zoom\" data-action-value=\"0*wntCpqf6uvdsujtC.\" src=\"https://cdn-images-1.medium.com/max/1600/0*wntCpqf6uvdsujtC.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://mesos.apache.org/documentation/latest/architecture/\" data-href=\"http://mesos.apache.org/documentation/latest/architecture/\" class=\"markup--anchor markup--figure-anchor\" rel=\"noopener nofollow\" target=\"_blank\">http://mesos.apache.org/documentation/latest/architecture/</a></figcaption></div></figure><blockquote id=\"f76a\" class=\"graf graf--blockquote graf--startsWithDoubleQuote graf-after--figure\"><div>“Apache Mesos abstracts CPU, memory, storage, and other compute resources away from machines (physical or virtual), enabling fault-tolerant and elastic distributed systems to easily be built and run effectively.” — Apache Mesos homepage</div></blockquote><p id=\"6506\" class=\"graf graf--p graf-after--blockquote\">Many people compare Apache Mesos to Docker Swarm or Kubernetes. This is a fair comparison because Mesos is able to run and orchestrate containers. Apache Mesos has a core difference from other container managements systems. Most container management systems focus on starting up long running containers. Apache Mesos shines by creating a short lived container to execute one specific unit of work. This allows Mesos to operate more fine grained and maximize the usage of all the resources in your cluster.</p><p id=\"8252\" class=\"graf graf--p graf-after--p graf--trailing\">When you run all pieces of the SMACK stack on top of Apache Mesos you can add more resources at any time. Add another machine to your Mesos cluster and Mesos will take care of the rest.</p></div><div class=\"section-inner sectionLayout--insetColumn\"><figure id=\"4ecb\" class=\"graf graf--figure graf--leading\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*dhOHvKgPXUXxbzc6.\" data-width=\"585\" data-height=\"240\" src=\"https://cdn-images-1.medium.com/max/1600/0*dhOHvKgPXUXxbzc6.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"https://akka.io/\" data-href=\"https://akka.io/\" class=\"markup--anchor markup--figure-anchor\" rel=\"noopener nofollow\" target=\"_blank\">https://akka.io/</a></figcaption></div></figure><p id=\"6451\" class=\"graf graf--p graf-after--figure\">Akka is a set of Scala libraries used for writing serverless applications. Akka allows you to write concurrent applications without worrying about low level concurrency constructs like atomics and locks. Akka also makes it easy to spin up an elastic and highly available cluster of workers to run you Akka code.</p><figure id=\"c46f\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*Fb_M0kMXhEPwKZfd.\" data-width=\"599\" data-height=\"190\" src=\"https://cdn-images-1.medium.com/max/1600/0*Fb_M0kMXhEPwKZfd.\" alt=\"image\" /></div></div></figure><p id=\"1b35\" class=\"graf graf--p graf-after--figure\">Think of Akka as the cooler younger nephew of messaging busses triggering COBAL jobs. Is funny how time seems to repeat itself. The actor pattern used by Akka has been around for a long time in mainframes. With Akka this old pattern has been given a makeover with new distributed computing tools making it easy to build our your own serverless application platform.</p><p id=\"fb8c\" class=\"graf graf--p graf-after--p\">In Akka all jobs are places on queues. When an actor(worker) becomes available it pulls a message off the queue and completes the job. These jobs can be data processing, responding to a HTTP calls, or pulling data from a database. In each case rather that having a thread wait for another thread to finish just move on to the next job.</p><p id=\"538e\" class=\"graf graf--p graf-after--p graf--trailing\">This pattern makes Akka the right development framework to code your new scalable application along side the rest of the SMACK stack.</p></div><div class=\"section-inner sectionLayout--insetColumn\"><figure id=\"b3b8\" class=\"graf graf--figure graf--leading\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*fDSuBLF3D6Y4rxeD.\" data-width=\"358\" data-height=\"240\" src=\"https://cdn-images-1.medium.com/max/1600/0*fDSuBLF3D6Y4rxeD.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://cassandra.apache.org/\" data-href=\"http://cassandra.apache.org/\" class=\"markup--anchor markup--figure-anchor\" rel=\"noopener nofollow\" target=\"_blank\">http://cassandra.apache.org/</a></figcaption></div></figure><blockquote id=\"8380\" class=\"graf graf--blockquote graf--startsWithDoubleQuote graf-after--figure\"><div>“The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. ” — Cassandra Website</div></blockquote><p id=\"3d40\" class=\"graf graf--p graf-after--blockquote\">If you are looking for a fault tolerant, scalable, decentralized, distributed database, with battle tested experience to store your important data, look no further. Apache Cassandra is the the NoSQL database you have been looking for.</p><p id=\"378d\" class=\"graf graf--p graf-after--p\">Wow that is a mouthful!</p><p id=\"9d78\" class=\"graf graf--p graf-after--p\">Apache Cassandra is a row oriented NoSql database built for the Big Data era. Facebook built Apache Cassandra using tech from Google Big Table and Amazon Dynamo.</p><p id=\"34f3\" class=\"graf graf--p graf-after--p\">What does this all mean?</p><figure id=\"e4b4\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*GiONM_y7mq4OWeIK.\" data-width=\"403\" data-height=\"353\" src=\"https://cdn-images-1.medium.com/max/1600/0*GiONM_y7mq4OWeIK.\" alt=\"image\" /></div></div></figure><p id=\"9144\" class=\"graf graf--p graf-after--figure\">Apache Cassandra is a big database that can run across of a lot of servers without slowing down. More servers means more disk, more memory, and more cpu. But more servers also means more coordination and potential problems. Apache Cassandra takes care of all that coordination, including data replication and node orchestration. That way you can focus on inserting and retrieving lots of data.</p><p id=\"ff45\" class=\"graf graf--p graf-after--p graf--trailing\">Apache Cassandra allows you to add more nodes when you need it as well as remove them when you don’t. This makes Cassandra a great addition along with the other members of the stack. Each of these tools allow you to start small and scale up or down depending on your needs.</p></div><div class=\"section-inner sectionLayout--insetColumn\"><figure id=\"a49c\" class=\"graf graf--figure graf--leading\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*huQJ98ACvPWDe_7Z.\" data-width=\"804\" data-height=\"240\" data-action=\"zoom\" data-action-value=\"0*huQJ98ACvPWDe_7Z.\" src=\"https://cdn-images-1.medium.com/max/1600/0*huQJ98ACvPWDe_7Z.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://kafka.apache.org/\" data-href=\"http://kafka.apache.org/\" class=\"markup--anchor markup--figure-anchor\" rel=\"noopener nofollow\" target=\"_blank\">http://kafka.apache.org/</a></figcaption></div></figure><p id=\"1e73\" class=\"graf graf--p graf-after--figure\">Last but not least, Apache Kafka. Apache Kafka is a distributed Pub/Sub messaging system. This means it is basically a supercharged messaging queue. Apache Kafka is able to manage a queue running across many servers with many publishers and subscribers.</p><p id=\"b2fe\" class=\"graf graf--p graf-after--p\">To make this possible Kafka splits a specific topic into many partitions. Then it distributes these partitions across different brokers running on different physical machines. This allows Kafka to scale without loosing data.</p><figure id=\"5f0a\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*06w4JmB5UioTOLpy.\" data-width=\"632\" data-height=\"420\" src=\"https://cdn-images-1.medium.com/max/1600/0*06w4JmB5UioTOLpy.\" alt=\"image\" /></div></div></figure><figure id=\"9911\" class=\"graf graf--figure graf-after--figure\"><div class=\"aspectRatioPlaceholder is-locked\"><div class=\"aspectRatioPlaceholder-fill\"><img class=\"graf-image\" data-image-id=\"0*VqwHRU3Qpl3WBX3L.\" data-width=\"710\" data-height=\"278\" data-action=\"zoom\" data-action-value=\"0*VqwHRU3Qpl3WBX3L.\" src=\"https://cdn-images-1.medium.com/max/1600/0*VqwHRU3Qpl3WBX3L.\" alt=\"image\" /></div></div></figure><blockquote id=\"b453\" class=\"graf graf--blockquote graf--startsWithDoubleQuote graf-after--figure\"><div>“Kafka® is used for building real-time data pipelines and streaming apps. It is horizontally scalable, fault-tolerant, wicked fast, and runs in production in thousands of companies.” — Apache Kafka homepage</div></blockquote><p id=\"7d51\" class=\"graf graf--p graf-after--blockquote\">LinkedIn developed Apache Kakfa to handle huge numbers of producers and consumers reading and writing simultaneously. This ability allows Kafka to act as a massive distributed buffer within your SMACK stack. Kafka will keep track of any information as it comes into your application until there are available machine resources. Both Apache Spark streaming and Akka play well with queues specifically Kafka.</p><p id=\"d43d\" class=\"graf graf--p graf-after--p graf--trailing\">All this makes Kafka another welcome member of the SMACK stack.</p></div><div class=\"section-inner sectionLayout--insetColumn\"><p id=\"701d\" class=\"graf graf--p graf--leading\">So now I will apologies to those of you who have been completely overwhelmed. I covered a lot of information very quickly but i have barely scratched the tip of the iceberg.</p><p id=\"ee09\" class=\"graf graf--p graf-after--p graf--trailing\">Over the next few weeks I will write more thorough articles for each piece of the SMACK stack. I will also building out some demos so we can better see where the SMACK stack thrives and where it falls over.</p></div>"}}]}},"pageContext":{"alternative_id":9061}}