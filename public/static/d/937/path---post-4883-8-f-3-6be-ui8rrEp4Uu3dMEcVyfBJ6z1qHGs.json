{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Cassandra Nagios","alternative_id":4883,"content":"<h3>\n      \n      README.txt\n    </h3>\n      <div class=\"plain\"><pre>The repo:\nThis repo houses the work we did to monitor Cassandra using Nagios.\nHow repo is structured:\n  src - a patch to apply to nagios so that it does not truncate performance data\n  examples - example configuration\n    nagios - example nagios configuration\n    jolokia - example jolokia configuration\n  plugins - the check_cassandra.pl plugin and Jolokia.pm wrapper\nWhy:\nJolokia is a really awesome tool that makes it easy to get at jmx without having\nto use jmx or java. If you haven't already you should check out jmx4perl, a\ncomplete version of the Jolokia API, and another very good script\ncheck_jmx4perl.\nWe decided not to use jmx4perl because it had *too many* features (and\ndependencies). We wrote a minimalist Jolokia.pm module, implementing a very\nsmall subset of the Jolokia API (list, read). Also, we wanted to minimize the\nnumber of nagios checks we are making while still exporting all of the\nperformance datas.\nWhat:\nThe script, check_cassandra.pl, will query the Jolokia API running inside the\nCassandra JVM, checking an arbitrary number of metrics. The script returns all\nof the metrics, not just the checked metrics, as performane data. The examples\ndirectory has an example nagios configuration*.\nThe script is meant to run under ePn and can check multiple metrics in each run,\nso it should be relatively efficient.\nThe most common check is a regex check (-C regex -r '.*') that will check all\nmetrics matching the regular expression.\nThe script can also check the length of a list. The StorageService mbean exposes\nlists of nodes in certain states. This is the only place this type of check is\nused.\nThe script can also check for the presence of a string. This is useful, e.g., to\ncheck the cluster is NORMAL and the nodes are UP.\n*A disclaimer here: We have not actually started using Cassandra in production so\nthe thresholds are probably wrong and/or we are not monitoring everything we\nshould and/or we are monitoring things we probably shouldn't be.\nHow:\nFirst, you may want to apply the patch in the src directory to Nagios. Nagios\ntruncates plugin output at an arbitrary buffer size. This step is only required\nif you are interested in collecting all of the performance output returned by\nthe plugin. Without the patch nagios will truncate the performance data.\nConfigure Cassandra:\nCassandra needs to be configured with the jolokia-agent[1]. The agent should be\non the classpath. The easiest way is to drop the jolokia-jvm.jar into\n/usr/share/cassandra/lib.\nAdd the following to cassandra-env.sh:\n# Load the jolokia agent\nJVM_OPTS=\"$JVM_OPTS -javaagent:/usr/share/cassandra/lib/jolokia-jvm-1.1.1-agent.jar=\\\nconfig=/etc/cassandra/jolokia/jolokia.properties\"\nThen copy the examples/jolokia/ to /etc/cassandra/jolokia/.\nConfigure Nagios:\nInstall the required perl modules on the nagios machine:\nsudo yum install perl-libwww-perl perl-JSON\nsudo apt-get install libwww-perl libjson-perl\nCopy the plugins directory into the nagios plugins directory.\nDefine nagios check commands similar to those in the examples directory.\nCollect performance data:\nUse graphios. Seriously, use graphios. It *just works*.\n[1] <a href=\"http://jolokia.org/agent/jvm.html\">http://jolokia.org/agent/jvm.html</a>\n</pre></div>"}}]}},"pageContext":{"alternative_id":4883}}