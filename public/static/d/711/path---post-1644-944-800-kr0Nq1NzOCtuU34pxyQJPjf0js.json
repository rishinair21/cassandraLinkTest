{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"jtruelove/exovert","alternative_id":1644,"content":"<h3>\n      <svg aria-hidden=\"true\" class=\"octicon octicon-book\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/>\n      README.md\n    </h3><article class=\"markdown-body entry-content\" itemprop=\"text\"><p><a href=\"https://travis-ci.org/cyngn/exovert\"><img src=\"https://camo.githubusercontent.com/2d1498a6c5470bd01454ccf84f569516ebc77f05/68747470733a2f2f7472617669732d63692e6f72672f63796e676e2f65786f766572742e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/cyngn/exovert.svg?branch=master\"/></a></p>\n<p>Is a tool that is designed to help free developers up to focus on developing services and not building the boiler plate glue code often involved with accessing a DB, creating POJOs, building CRUD interfaces. It also helps in creating REST server and client classes, or creating Java classes with setters, getters, equals/hashCode/toString, builder and Json annotations.</p>\n<p>The tool is focused around using Cassandra for storage and Vert.x as the primary service framework. More DB options could be added based on demand at a later time.</p>\n<p>Currently tool has two generators - CrudGenerator and RestGenerator</p>\n<p>CrudGenerator works by reading your schema from the DB then generating the entity classes (ie Table and UDT objects), then building a DAL for them, then the REST interface.</p>\n<p>CrudGenerator Support</p>\n<ul><li>entity classes</li>\n<li>DAL</li>\n<li>CRUD REST interface, including list APIs</li>\n<li>Simple Server</li>\n<li>metrics support (coming soon)</li>\n<li>cache support (coming later)</li>\n</ul><p>RestGenerator works by reading the specification file from the command line and generates either server or client or type classes depending on the command line option.</p>\n<p>RestGenerator Support</p>\n<ul><li>REST API classes for GET, POST and DELETE</li>\n<li>Validations for API inputs</li>\n<li>Request and Response classes for REST APIs</li>\n<li>Java classes with setters, getters, equals/hashCode/toString, builder and Json annotations</li>\n<li>Option to generate Immutable or Mutable classes</li>\n<li>Request and Response classes for REST clients</li>\n<li>REST client builder with service endpoint, timeouts, retries (coming later)</li>\n</ul><h2><a id=\"user-content-getting-started\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#getting-started\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>Getting Started</h2>\n<p>Get the command line tool.</p>\n<div class=\"highlight highlight-text-xml\"><pre>&lt;dependency&gt;\n    &lt;groupId&gt;com.cyngn.vertx&lt;/groupId&gt;\n    &lt;artifactId&gt;exovert&lt;/artifactId&gt;\n    &lt;version&gt;0.2.0&lt;/version&gt;\n&lt;/dependency&gt;</pre></div>\n<h2><a id=\"user-content-running-crudcreator\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#running-crudcreator\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>Running CrudCreator</h2>\n<div class=\"highlight highlight-source-shell\"><pre>$ build/bin/CrudCreator</pre></div>\n<pre>Option           Description\n------           -----------\n-c, --create     create the basic service infrastructure\n-d, --db         the db host to connect to\n--help           shows this message\n-k, --keyspace   the keyspace to read from\n-n, --namespace  the namespace to create java classes in\n-o, --out        the output dir to place files in\n-p, --preview    output all the java files to the\n                   console, don't create files\n-r, --rest       generate the REST API for the scheme\n</pre>\n<p><strong>Example Preview Run</strong></p>\n<div class=\"highlight highlight-source-shell\"><pre>java -jar exovert-0.1.0-fat.jar --preview -k test_keyspace -db localhost -n com.test</pre></div>\n<p><strong>Example Run</strong></p>\n<div class=\"highlight highlight-source-shell\"><pre>java -jar exovert-0.1.0-fat.jar --create -k test_keyspace -db localhost -n com.test -o src/java/generated</pre></div>\n<h3><a id=\"user-content-example-cassandra-scheme\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#example-cassandra-scheme\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>Example Cassandra Scheme</h3>\n<p>As an example <a href=\"https://github.com/cyngn/ChronoServer/blob/master/db/scheme.cql\">ChronoServer Cassandra Schema</a></p>\n<div class=\"highlight highlight-source-sql\"><pre>// schema script\nCREATE TYPE IF NOT EXISTS chrono.url_package (\n   method varchar,\n   urls set&lt;varchar&gt;\n);\nCREATE TABLE IF NOT EXISTS chrono.test_batch (\n    name varchar,\n    url_packages list&lt;frozen&lt;url_package&gt;&gt;,\n    created timestamp,\n    PRIMARY KEY (name)\n);\nCREATE TYPE IF NOT EXISTS chrono.measurement (\n   url varchar,\n   time_in_milli bigint\n);\nCREATE TABLE IF NOT EXISTS chrono.payload (\n    unit varchar,\n    size bigint,\n    data varchar,\n    PRIMARY KEY (unit, size)\n);\nCREATE TABLE IF NOT EXISTS chrono.upload_data (\n\t  test_batch varchar,\n    unit varchar,\n    size bigint,\n    data varchar,\n    created timestamp,\n    PRIMARY KEY (test_batch, unit, size, created)\n);\nCREATE TABLE IF NOT EXISTS chrono.report (\n    batch_name varchar,\n    mode varchar,\n    device_id varchar,\n    mobile_carrier varchar,\n    mobile_rssi varchar,\n    wifi_state varchar,\n    wifi_rssi varchar,\n    gps_coordinates varchar,\n    tag varchar,\n    mobile_network_class varchar,\n    mobile_network_type varchar,\n    client_ip varchar,\n    created timestamp,\n    measurements list&lt;frozen&lt;measurement&gt;&gt;,\n    PRIMARY KEY (batch_name, device_id, created)\n);</pre></div>\n<h3><a id=\"user-content-crud-generated-code-example\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#crud-generated-code-example\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>CRUD Generated Code Example</h3>\n<p>see <a href=\"https://github.com/cyngn/exovert/blob/master/src/main/java/com/cyngn/exovert/generate/CRUD_README.md\">CRUD_README.md</a> for the output code sample.</p>\n<h2><a id=\"user-content-running-restgenerator\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#running-restgenerator\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>Running RestGenerator</h2>\n<div class=\"highlight highlight-source-shell\"><pre>$ build/bin/RestCreator</pre></div>\n<pre>--client       create the client files on disk\n-f, --spec     specification file (default: api.json)\n--help         shows this message\n-o, --out      the output dir in which to place files\n                 (default: build/generated-src)\n-p, --preview  output all the java files to the\n                 console, don't create files\n--server       create the server files on disk\n--types        create the type files on disk  \n</pre>\n<p><strong>Example Preview Run to create server</strong></p>\n<div class=\"highlight highlight-source-shell\"><pre>build/bin/RestGenerator --preview --server --spec api.json</pre></div>\n<p>For sample api json file, look at <a href=\"https://github.com/cyngn/exovert/blob/master/samples/\">samples</a></p>\n<p><strong>Example Run to create server</strong></p>\n<div class=\"highlight highlight-source-shell\"><pre>build/bin/RestGenerator --server --spec api.json --out build/generated-src</pre></div>\n<h3><a id=\"user-content-rest-generated-code-example\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#rest-generated-code-example\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>REST Generated Code Example</h3>\n<p>Examples are at <a href=\"https://github.com/cyngn/exovert/blob/master/src/main/java/com/cyngn/exovert/generate/server/rest/README.md\">REST_README.md</a></p>\n<h3><a id=\"user-content-thanks\" class=\"anchor\" href=\"https://github.com/jtruelove/exovert#thanks\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewbox=\"0 0 16 16\" width=\"16\"/></a>Thanks</h3>\n<p>Especially to the <a href=\"https://github.com/square/javapoet\">Java Poet Creators</a> for making such a great and easy to use code generation library.</p>\n</article>"}}]}},"pageContext":{"alternative_id":1644}}