{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"A rock and a hard place: Between ScyllaDB and Cassandra","alternative_id":12078,"content":"<p>Cassandra is a poster child of the NoSQL world. Originally an open source project sprung out of Facebook, it has been adopted by the Apache Foundation and backed by an enterprise, DataStax, that also offers DataStax Enterprise based on Cassandra. Cassandra is among the top 10 database solutions <a href=\"https://db-engines.com/en/ranking_trend\" target=\"_blank\" rel=\"noopener noreferrer\">according to DB-Engines</a>.</p><p>That is precisely why it now has a potentially dangerous rival in ScyllaDB. ScyllaDB is a new kid on the NoSQL block aiming to offer a solution that is open source and API-compatible with Cassandra, but performs much better. The goal is to be a drop-in replacement for Cassandra, and when we're talking about database #8 in the world, that's kind of a big deal.</p><h3>I, Cloudius</h3><p>Dor Laor and Avi Kivity did not set out with this grandiose plan back in 2013. It was not for lack of ambition, but this just was not their thing. They both have backgrounds in hypervisors and were <a href=\"http://www.eweek.com/cloud/how-did-kvm-virtualization-get-into-the-linux-kernel\" target=\"_blank\" rel=\"noopener noreferrer\">part of the team that built KVM and got acquired by Red Hat</a>. Leaving Red Hat, their initial plan was to write a unikernel that would displace Linux from cloud servers. So no lack of ambition there.</p><p>They founded a startup called Cloudius, found investors, assembled a team and started working hard. At some point however they realized that their potential would not be reached for a number of reasons, and decided to pivot. And pivot they did, to add another NoSQL database to the never ending list, one that would be able to do what Cassandra does and then some.</p><p>But why go for a NoSQL database, and why target Cassandra?</p><figure class=\"image  image-full-width shortcode-image\"><img src=\"https://zdnet1.cbsistatic.com/hub/i/r/2017/10/24/05b22e21-a725-4cf2-a42b-19683720c1ce/resize/770xauto/ed15875f35d515666d1a6365839b9a2c/scyllalogo2000px.png\" class=\"\" alt=\"scyllalogo2000px.png\" height=\"auto\" width=\"770\" /><figcaption>ScyllaDB did not start as a database at all, but having pivoted to one, it may prove a force to be reckoned with. Image: ScyllaDB.</figcaption></figure>\n<p>Part of Cloudius mission was to speed up server loads, with an emphasis on databases. Laor, ScyllaDB CEO, says that they had managed to boost Redis performance by 70 percent without actually doing anything Redis-specific. You may wonder how was that possible, and there is an answer, but for now let's stick to the fact that this triggered them to take that direction.</p><p>It was a combination of market and technical reasons that made Cloudius target Cassandra. Laor says Hadoop was in their list as well, but since that had already been done they decided to go for rewriting Cassandra: \"The world does not need another database format. Cassandra's format is good, and it is successful. Cassandra is the best high availability platform out there.\"</p>\n    <section class=\"sharethrough-top\" data-component=\"medusaContentRecommendation\" data-medusa-content-recommendation-options=\"{&quot;promo&quot;:&quot;promo_ZD_recommendation_sharethrough_top_in_article_desktop&quot;,&quot;spot&quot;:&quot;dfp-in-article&quot;}\">\n    </section><p>They say imitation is the sincerest form of flattery, and it's obvious from this that the ScyllaDB team found Cassandra worth imitating. But it's more complicated than that: \"Cassandra is everywhere in critical workloads. But when we targeted it for optimization, we ran against limitations tied to its JVM nature. In the end, Cassandra ends up competing with itself.</p><p>At that time, <a href=\"https://cloudplatform.googleblog.com/2014/03/cassandra-hits-one-million-writes-per-second-on-google-compute-engine.html\" target=\"_blank\" rel=\"noopener noreferrer\">Google had just published a benchmark detailing how they managed to get 1 million transactions on top of Cassandra</a> in their cloud using 300 virtual machines. This piqued our interest, and focusing our work on Cassandra we managed to get a record 1.6 million transactions on one virtual machine. This is how we got started.\"</p><h3>Enter ScyllaDB</h3><p>Cloudius pivoted and rebranded, but kept the same team and investors. Thus ScyllaDB was born. You may think it's cheeky to target \"the best high availability platform out there\" and aim to do better, but Laor says they are hoping to see history repeating. And the entirety of that quote, \"imitation is the sincerest form of flattery that mediocrity can pay to greatness,\" may not necessarily apply here.</p><p>\"When we entered the market with KVM, all the players were established -- VMWare, HyperV, Xen. We showed up last, but based on Avi's revolutionary design KVM now dominates. We think our differentiation this time around is even bigger,\" says Laor.</p><p>So what is this differentiation? ScyllaDB promises something simple, alluring, and hard to believe: keep your codebase, replace Cassandra with ScyllaDB, get up to 10 times boost in performance. There are benchmarks and references to back those claims, but how can this possibly work? It comes down to a number of things.</p><figure class=\"image  image-full-width shortcode-image\"><img src=\"https://zdnet1.cbsistatic.com/hub/i/r/2017/10/24/965711a0-fe02-4bf3-833e-6f02393defcc/resize/770xauto/71f840138022af60b4c2268d1481950b/scylladbthemes.png\" class=\"\" alt=\"scylladbthemes.png\" height=\"auto\" width=\"770\" /><figcaption>ScyllaDB has been focused on stability, performance and compatibility. Today the announcement of version 2.0 signifies a new phase. Image: ScyllaDB</figcaption></figure><p>First, different implementation language. ScyllaDB has been rewritten from scratch in C++, as opposed to Cassandra's Java-based codebase. The JVM adds an intermediate layer between source code and hardware, trading portability and ease of use for performance. JVMs have come a long way, but the proper use of a language closer to the low-level fundamentals may result in better performance.</p><p>But that's only part of ScyllaDB's secret sauce. An equally big part has to do with those underlying fundamentals, such as memory or socket allocation. The kind of nitty gritty details that are hard to get, program, and maintain, but can result in dramatic improvements. The kind of thing that you get to know intimately if you program, say, a hypervisor.</p><p>All those lessons learned through years of low level programming have been distilled in <a href=\"https://github.com/scylladb/seastar\" target=\"_blank\" rel=\"noopener noreferrer\">SeaStar</a>. SeaStar is an open source framework for high performance applications that ScyllaDB is built on, although there is nothing database-specific about it. SeaStar is event-driven and enables writing efficient non-blocking, asynchronous code. </p><p>The tradeoff? Complexity. Laor admits it's hard to program on top of SeaStar, but says the result is worth the effort. He mentions for example <a href=\"https://github.com/fastio/pedis\" target=\"_blank\" rel=\"noopener noreferrer\">Pedis</a>, a rewrite of Redis based on SeaStar done by Alibaba, which turbo-charges Redis. Besides, ScyllaDB promises, the average Cassandra user does not need to worry about that. </p><p>ScyllaDB aims to ease the complex task of configuring and tuning Cassandra deployments by offering auto-tuning capabilities. ScyllaDB has added improvements in both node management and network protocols with the goal of having clusters running optimally without requiring administrator intervention.</p><p>Laor compared this feature to <a href=\"https://www.zdnet.com/article/oracle-preps-autonomous-database-at-openworld-aims-to-cut-labor-admin-time/\" target=\"_blank\">Oracle's self tuning database</a>. There are however similar solutions for other platforms too, <a href=\"https://www.zdnet.com/article/spark-gets-automation-analyzing-code-and-tuning-clusters-in-production/\" target=\"_blank\">such as Spark</a>. For Spark, some approaches are based on using machine learning on datasets gathered from many operational clusters, some others on rules.</p><p>ScyllaDB has adopted the rule-based approach, as Laor does not believe datasets may be representative of all possible configurations. \"We use developer intelligence, not artificial intelligence,\" he says. Arguably, datasets from operational Cassandra clusters would be hard to come by for ScyllaDB anyway. Which brings us to an interesting point.</p><h3>A rock and a hard place</h3><p>On the one hand, the decision to build a new platform that is compatible with an existing one reduces friction and lowers the adoption barrier for organizations. ScyllaDB already has names such as Samsung, IBM, and Outbrain among its early <a href=\"http://www.scylladb.com/users/\" target=\"_blank\" rel=\"noopener noreferrer\">adopters using it in production</a>.</p><p>On the other hand, it induces friction with the platform the newcomer aims to displace: Cassandra. We've seen <a href=\"https://www.zdnet.com/article/towards-a-unifying-data-theory-and-practice-combining-operations-analytics-and-streaming/\" target=\"_blank\">similar examples in the Spark world</a>, but the difference is that Spark alternatives are still largely based on Spark so there can be cross-pollination and eventually perhaps convergence.</p><p>Here we're talking about a radical departure -- different implementation language, different low-level infrastructure, different network protocols. There really is no room for Cassandra and ScyllaDB to play side by side, as amply exemplified by the fact they cannot even coexist in a cluster.</p><figure class=\"image  image-full-width shortcode-image\"><img src=\"https://zdnet3.cbsistatic.com/hub/i/r/2017/10/24/8143b608-7510-4fb3-8c1f-ea35a654729e/resize/770xauto/3c34674788631b734ae6d73d4439dd21/scylladbbenchmark.png\" class=\"\" alt=\"scylladbbenchmark.png\" height=\"auto\" width=\"770\" /><figcaption>One of ScyllaDB's benchmarks, in which it is shown to outperform Cassandra. Image: ScyllaDB</figcaption></figure><p>Typically, Laor says, people set up a proof of concept ScyllaDB cluster working side by side with Cassandra until they feel confident enough to make the switch. \"We have different protocols. We considered supporting Cassandra protocols, but there are so many versions out there we decided against it. Plus, when things go wrong in a mixed cluster, whom will you blame?\"</p><p>Could that hurt adoption? \"We are not married to our databases, that's what people tell us,\" says Laor. \"It's a big investment, but they can change. Choosing Cassandra was a strategic decision for us. We started from scratch and rewrote everything. When you do that, you create antagonism. It touches many people, it's sensitive.</p><p>But the results speak for themselves. For example, an AdTech client of ours has managed to go from 100,000 timeouts per second with Cassandra to 100 per second with ScyllaDB. We have not been doing much in terms of collaboration, mostly because at the moment we are heads-down working on feature parity. But like KVM and Xen, where we had common interfaces, there may be potential for collaboration.\"</p><p>Laor mentions some areas in which they are contributing to the Cassandra community, such as ScyllaDB CTO presenting design choices at Cassandra next generation conference or contributing a driver for Go. He also emphasizes that ScyllaDB is an open source project and they try to document and disseminate design decisions and implementation and says they would like to work with Cassandra on certain features in the future.</p><p>ScyllaDB is a newcomer, but on paper at least it looks like it's got what it takes to displace a heavyweight such as Cassandra with DataStax's enterprise backing. The team has been there and done it before, feature parity is almost there, financials and organizational structure seem to be there as well.</p><p>ScyllaDB is well funded, with a total of $25 million, and has a team of 45 (mostly engineers) working together for years. On the technical front, it seems like ScyllaDB can give Cassandra a run for its money. But what does that \"hostile takeover\" mean for Cassandra, DataStax and the community? Will ScyllaDB be able to win hearts and minds?</p><p>It seems the Cassandra community is currently in somewhat of a turmoil anyway. There has been some <a href=\"https://www.theregister.co.uk/2016/11/14/datastax_versus_asf_staxeit/\" target=\"_blank\" rel=\"noopener noreferrer\">friction between DataStax and the Apache Foundation</a>, resulting in uncertainty about the project's future and direction. So to be a Cassandra user today may mean you are between a rock and a hard place.</p><figure class=\"image  image-full-width shortcode-image\"><img src=\"https://zdnet3.cbsistatic.com/hub/i/r/2017/10/24/8541e0a0-26dc-43b4-b9cc-16d10e67a501/resize/770xauto/b7ebbe39ddf7e4bbd0ea67a678f15a8d/scylladbcontributors.png\" class=\"\" alt=\"scylladbcontributors.png\" height=\"auto\" width=\"770\" /><figcaption>ScyllaDB plus SeaStar contributors are about as many as Cassandra contributors at this point, per ScyllaDB's accounts. Image: ScyllaDB</figcaption></figure><p>DataStax on its part did not reply to a request for comment. ScyllaDB on the other hand says their community is growing, despite the fact that the entry barrier is high due to the complex nature of their implementation, and that they have practically achieved feature parity.</p><p>ScyllaDB 2.0 is being announced today at <a href=\"http://www.scylladb.com/scylla-summit-2017/\" target=\"_blank\" rel=\"noopener noreferrer\">Scylla Summit</a>, bringing some highly sought after features such as counters and materialized views. According to Laor, full feature parity will be achieved in early 2018. Add to the mix the <a href=\"http://www.scylladb.com/press-release/scylladb-acquires-seastar-io-database-service-technology/\" target=\"_blank\" rel=\"noopener noreferrer\">recent acquisition of Seastar.io</a>, which will act as a catalyst for ScyllaDB to offer a managed cloud version, and you see why ScyllaDB is a name you may be hearing more in the future.</p><p>Speaking of names, what's with ScyllaDB's name anyway? Apparently its founders wanted to use a name from Greek mythology, as <a href=\"https://www.quora.com/Where-does-Apache-Cassandras-name-come-from#\" target=\"_blank\" rel=\"noopener noreferrer\">was the case for Cassandra</a>. According to them in some parts of the world \"Scylla\" is pronounced \"scale-ah,\" which alludes to scalability, and thus a name was born.</p><p>Ironically, Cassandra was an Oracle nobody would listen to. Scylla and Charybdis were <a href=\"https://history.howstuffworks.com/history-vs-myth/10-expressions-from-ancient-world4.htm\" target=\"_blank\" rel=\"noopener noreferrer\">a monster and a whirlpool guarding the strait of Messina</a>, making it impossible to navigate past them. To be between Scylla and Charybdis is to be between a rock and a hard place. But to be between ScyllaDB and Cassandra may turn out to be a good thing for the community, should it eventually steer clear of the antagonism.</p>"}}]}},"pageContext":{"alternative_id":12078}}