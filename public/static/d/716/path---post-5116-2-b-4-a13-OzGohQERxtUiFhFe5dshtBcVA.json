{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Learning Apache Cassandra-Part-4-Adding Node To Cassandra Cluster","alternative_id":5116,"content":"<p>In last post of this series we learnt how to install cassandra on Rhel 6. In this post we will look into additional configuration parameter that is needed to configure in order to facilitate other nodes to join the cassandra cluster.</p>\n<p>If you have missed earlier posts of this series then you can read them from below links:</p>\n<p>1: <a href=\"http://www.vstellar.com/2017/01/02/learning-apache-cassandra-part-1introduction/\">Introduction to Cassandra</a></p>\n<p>2: <a href=\"http://www.vstellar.com/2017/01/03/learning-apache-cassandra-part-2understanding-cassandra-readwrite-mechanism/\" target=\"_blank\" rel=\"noopener\">Understanding Cassandra Read/Write Mechanism</a></p>\n<p>3: <a href=\"http://www.vstellar.com/2017/01/08/learning-apache-cassandra-part-3-installing-cassandra-on-rhel6/\">Installing Cassandra on RHEL6</a></p>\n<p>At the moment we have one node cassandra cluster. Before going ahead and installing cassandra on other nodes, we will first perform following configuration changes in cassandra.yaml file.</p>\n<p>Navigate to cassandra.yaml file which is located in cassandra_install_dir/conf folder. Open the file in editor of your choice and look for following options:</p>\n<ul><li><strong>Listen_address</strong>: Address where gossip will be listening to. This address can’t be localhost or 0.0.0.0, because the rest of nodes will try to connect to this address.</li>\n<li><strong>RPC_address</strong>: This is the address where thrift will be listening. We must put a existing IP address (it may be localhost, if we want to), or 0.0.0.0 if we want to listen through all of them. This is the address to which client applications interact with cassandra DB.</li>\n<li><strong>Seeds</strong>: Seed nodes are the nodes which will provide cluster info to the new nodes which are bootstrapped and are ready to join the cluster. Seed nodes become a reference for any new nodes to join cluster in trustable way.</li>\n</ul><p>This settings we need to configure in <strong>cassandra.yaml</strong> file on each node which we want to put into the cluster.</p>\n<p><strong>Note:</strong> Be sure to install the same version of Cassandra as is installed on the other nodes in the cluster.</p>\n<p><strong>Procedure to add new nodes in cassandra cluster:</strong></p>\n<p>1: Install Cassandra on the new nodes, but do not start Cassandra.</p>\n<p>2: Set the following properties in the cassandra.yaml and, depending on the snitch, the cassandra-topology.properties or cassandra-rackdc.properties configuration files:</p>\n<ul><li><strong>auto_bootstrap</strong> – This property is not listed in the default cassandra.yaml configuration file, but it might have been added and set to false by other operations. If it is not defined in cassandra.yaml, Cassandra uses true as a default value. For this operation, search for this property in the cassandra.yaml file. If it is present, set it to true or delete it..</li>\n<li><strong>cluster_name</strong> – The name of the cluster the new node is joining. Ensure that cluster name is same for all nodes which will be part of cluster.</li>\n<li><strong>listen_address</strong> – Can usually be left blank. Otherwise, use IP address or hostname that other Cassandra nodes use to connect to the new node.</li>\n<li><strong>endpoint_snitch</strong> – The snitch Cassandra uses for locating nodes and routing requests. In my lab I am using simple snitch which is present as default in cassandra.yaml file and so I did not change or edit this.</li>\n<li><strong>num_tokens</strong> – The number of vnodes to assign to the node. If the hardware capabilities vary among the nodes in your cluster, you can assign a proportional number of vnodes to the larger machines.</li>\n<li><strong>seeds</strong> – Determines which nodes the new node contacts to learn about the cluster and establish the gossip process. Make sure that the -seeds list includes the address of at least one node in the existing cluster.</li>\n</ul><p>Post installing cassandra on your second node and making the configuration change as stated above, go ahead and start cassandra service on second node and do a watch on nodetool status on cassandra node 1 and you will see the new node joining the cluster.</p>\n<p><strong>Nodetool Status Output</strong></p>\n<p>Every 2.0s: /opt/apache-cassandra/bin/nodetool status Sun Jan 8 23:31:44 2017</p>\n<p>Datacenter: datacenter1<br/>\n =======================<br/>\n Status=Up/Down<br/>\n |/ State=Normal/Leaving/Joining/Moving<br/>\n — Address               Load           Tokens Owns (effective) Host ID Rack<br/>\n UN 192.168.109.70 214.99 KiB  256      100.0%                    14ba62c6-59e4-404b-a6a6-30c9503ef3a4       rack1<br/>\n UN 192.168.109.71 103.47 KiB  256       100.0%                    3b19bc83-f483-4a60-82e4-109c90c49a14      rack1</p>\n<p>we have to repeat the same steps for each node which we want to place in our cluster.</p>\n<p>I hope this post is informational to you. Feel free to share this on social media if it is worth sharing. Be sociable <img class=\"emoji\" src=\"https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/svg/1f642.svg\" alt=\"????\"/></p>\n\n<div id=\"jp-relatedposts\" class=\"jp-relatedposts\">\n\t<h3 class=\"jp-relatedposts-headline\"><em>Related</em></h3>\n</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- Start Tags -->\n\t\t\t\t\t\t\t\t<div class=\"tags\"/>\n\t\t\t\t\t\t\t\t<!-- End Tags -->"}}]}},"pageContext":{"alternative_id":5116}}