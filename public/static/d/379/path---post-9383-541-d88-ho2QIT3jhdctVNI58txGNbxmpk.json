{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Instagram/cassandra","alternative_id":9383,"content":"<h3>\n      \n      README.asc\n    </h3><article class=\"markdown-body entry-content\" itemprop=\"text\"><div>\n<h2 id=\"user-content-executive-summary\"><a href=\"#executive-summary\" aria-hidden=\"true\" class=\"anchor\"></a>Executive summary</h2>\n<div>\n<div>\n<p>Cassandra is a partitioned row store.  Rows are organized into tables with a required primary key.</p>\n</div>\n<div>\n<p><a href=\"http://wiki.apache.org/cassandra/Partitioners\" rel=\"nofollow\">Partitioning</a> means that Cassandra can distribute your data across multiple machines in an application-transparent matter.  Cassandra will automatically repartition as machines are added and removed from the cluster.</p>\n</div>\n<div>\n<p><a href=\"http://wiki.apache.org/cassandra/DataModel\" rel=\"nofollow\">Row store</a> means that like relational databases, Cassandra organizes data by rows and columns.  The Cassandra Query Language (CQL) is a close relative of SQL.</p>\n</div>\n<div>\n<p>For more information, see <a href=\"http://cassandra.apache.org/\" rel=\"nofollow\">the Apache Cassandra web site</a>.</p>\n</div>\n</div>\n</div>\n<div>\n<h2 id=\"user-content-requirements\"><a href=\"#requirements\" aria-hidden=\"true\" class=\"anchor\"></a>Requirements</h2>\n<div>\n<div>\n<ol><li>\n<p>Java &gt;= 1.8 (OpenJDK and Oracle JVMS have been tested)</p>\n</li>\n<li>\n<p>Python 2.7 (for cqlsh)</p>\n</li>\n</ol></div>\n</div>\n</div>\n<div>\n<h2 id=\"user-content-getting-started\"><a href=\"#getting-started\" aria-hidden=\"true\" class=\"anchor\"></a>Getting started</h2>\n<div>\n<div>\n<p>This short guide will walk you through getting a basic one node cluster up\nand running, and demonstrate some simple reads and writes.</p>\n</div>\n<div>\n<p>First, we’ll unpack our archive:</p>\n</div>\n<div>\n<div>\n<pre>$ tar -zxvf apache-cassandra-$VERSION.tar.gz\n$ cd apache-cassandra-$VERSION</pre>\n</div>\n</div>\n<div>\n<p>After that we start the server.  Running the startup script with the -f argument will cause\nCassandra to remain in the foreground and log to standard out; it can be stopped with ctrl-C.</p>\n</div>\n<div>\n<div>\n<pre>$ bin/cassandra -f</pre>\n</div>\n</div>\n<div>\n<div>\n<div>\n<p>Note for Windows users: to install Cassandra as a service, download\n<a href=\"http://commons.apache.org/daemon/procrun.html\" rel=\"nofollow\">Procrun</a>, set the\nPRUNSRV environment variable to the full path of prunsrv (e.g.,\nC:\\procrun\\prunsrv.exe), and run \"bin\\cassandra.bat install\".\nSimilarly, \"uninstall\" will remove the service.</p>\n</div>\n</div>\n</div>\n<div>\n<p>Now let’s try to read and write some data using the Cassandra Query Language:</p>\n</div>\n<div>\n<div>\n<pre>$ bin/cqlsh</pre>\n</div>\n</div>\n<div>\n<p>The command line client is interactive so if everything worked you should\nbe sitting in front of a prompt:</p>\n</div>\n<div>\n<div>\n<pre>Connected to Test Cluster at localhost:9160.\n[cqlsh 2.2.0 | Cassandra 1.2.0 | CQL spec 3.0.0 | Thrift protocol 19.35.0]\nUse HELP for help.\ncqlsh&gt;</pre>\n</div>\n</div>\n<div>\n<p>As the banner says, you can use 'help;' or '?' to see what CQL has to\noffer, and 'quit;' or 'exit;' when you’ve had enough fun. But lets try\nsomething slightly more interesting:</p>\n</div>\n<div>\n<div>\n<pre>cqlsh&gt; CREATE SCHEMA schema1\n       WITH replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };\ncqlsh&gt; USE schema1;\ncqlsh:Schema1&gt; CREATE TABLE users (\n                 user_id varchar PRIMARY KEY,\n                 first varchar,\n                 last varchar,\n                 age int\n               );\ncqlsh:Schema1&gt; INSERT INTO users (user_id, first, last, age)\n               VALUES ('jsmith', 'John', 'Smith', 42);\ncqlsh:Schema1&gt; SELECT * FROM users;\n user_id | age | first | last\n---------+-----+-------+-------\n  jsmith |  42 |  john | smith\n cqlsh:Schema1&gt;</pre>\n</div>\n</div>\n<div>\n<p>If your session looks similar to what’s above, congrats, your single node\ncluster is operational!</p>\n</div>\n<div>\n<p>For more on what commands are supported by CQL, see\n<a href=\"https://github.com/apache/cassandra/blob/trunk/doc/cql3/CQL.textile\">the CQL reference</a>.  A\nreasonable way to think of it is as, \"SQL minus joins and subqueries, plus collections.\"</p>\n</div>\n<div>\n<p>Wondering where to go from here?</p>\n</div>\n<div>\n<ul><li>\n<p>Getting started: <a href=\"http://wiki.apache.org/cassandra/GettingStarted\" rel=\"nofollow\">http://wiki.apache.org/cassandra/GettingStarted</a></p>\n</li>\n<li>\n<p>Join us in #cassandra on irc.freenode.net and ask questions</p>\n</li>\n<li>\n<p>Subscribe to the Users mailing list by sending a mail to\n<a href=\"mailto:user-subscribe@cassandra.apache.org\">user-subscribe@cassandra.apache.org</a></p>\n</li>\n<li>\n<p>Planet Cassandra aggregates Cassandra articles and news:\n<a href=\"http://planetcassandra.org/\" rel=\"nofollow\">http://planetcassandra.org/</a></p>\n</li>\n</ul></div>\n</div>\n</div></article>"}}]}},"pageContext":{"alternative_id":9383}}