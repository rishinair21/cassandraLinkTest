{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Instaclustr: 7 easy steps to Cassandra cluster migration","alternative_id":12144,"content":"<p><em>This is a guest post for the Computer Weekly Open Source Insider blog written by <a href=\"https://www.linkedin.com/in/ben-slater-2720562/\">Ben Slater</a> in his capacity as chief product officer at Instaclustr.</em></p><p><em><a href=\"https://www.instaclustr.com/\">Instaclustr</a> positions itself as firm offering managed and supported solutions for Apache Cassandra, ScyllaDB, Elasticsearch, Apache Spark, Apache Zeppelin, Kibana and Apache Lucene. </em></p><p>Indeed, Instaclustr is known for its willingness to describe itself as a managed open source as a service company, if that expression actually exists.</p><p>The original title in full for this piece was: Migrating Your Cassandra Cluster – with Zero Downtime – in 7 Easy Steps.</p><p>Slater’s moves for writing this piece are (obviously) directed at companies who are looking to move a live Apache Cassandra deployment to a new location.</p><p>With this task in mind, it is (obviously) natural that these same companies will have some concerns, such as how you can keep Cassandra clusters 100% available throughout the process.</p><p>Arguing that if your application is able to remain online throughout connection setting changes, Slater says it can also remain fully available during this transition.</p><p><strong>NOTE:</strong> For extra protection and peace of mind, the following technique also includes a rapid rollback strategy to return to your original configuration, up until the moment the migration is completed.</p><p><strong>Slater writes as follows:</strong></p><p>Here’s a recommended 7-step Cassandra cluster migration order-of-operations that will avoid any downtime:</p><section class=\"section main-article-chapter\" data-menu-title=\"1) Get your existing environment ready\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">1) Get your existing environment ready</i></h3><p>First of all, make sure that your application is using a datacentre-aware load balancing policy, as well as LOCAL_*. Also, check that <u>all</u> of the keyspaces that will be copied over to the new cluster are set to use NetworkTopologyStrategy as their replication strategy. It’s also recommended that all keyspaces use this replication strategy when created, as altering this later can become complicated.</p></section><section class=\"section main-article-chapter\" data-menu-title=\"2) Create the new cluster\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">2) Create the new cluster</i></h3><p>Now it’s time to create the new cluster that you’ll be migrating to. A few things to be careful about here: be sure that the new cluster and the original cluster use the same Cassandra version and cluster name. Also, the new datacenter name that you use must be different from the name of the existing datacenter.</p></section><section class=\"section main-article-chapter\" data-menu-title=\"3) Join the clusters together\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">3) Join the clusters together</i></h3><p>To do this, first make any necessary firewall rule changes in order to allow the clusters to be joined, remembering that some changes to the source cluster may also be necessary. Then, change the new cluster’s seed nodes – and start them. Once this is done, the new cluster will be a second datacenter in the original cluster.</p></section><section class=\"section main-article-chapter\" data-menu-title=\"4) Change the replication settings\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">4) Change the replication settings<strong> </strong></i></h3><p>Next, in the existing cluster, update the replication settings for the keyspaces that will be copied, so that data will now be replicated with the new datacenter as the destination.</p></section><section class=\"section main-article-chapter\" data-menu-title=\"5) Copy the data to the new cluster\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">5) Copy the data to the new cluster</i></h3><p>When the clusters are joined together, Cassandra will begin to replicate writes to the new cluster. It’s still necessary, however, to copy any existing data over with the nodetool rebuild function. It’s a best practice to perform this function on the new cluster one or two nodes at a time, so as not to place an overwhelming streaming load on the existing cluster.</p></section><section class=\"section main-article-chapter\" data-menu-title=\"6) Change over the application’s connection points\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">6) Change over the application’s connection points</i></h3><p>After all uses of the rebuild function are completed, each of the clusters will contain a complete copy of the data being migrated, which Cassandra will keep in sync automatically. It’s now time to change the initial connection points of your application over to the nodes in the new cluster. Once this is completed, all reads and writes will be served by the new cluster, and will subsequently be replicated in the original cluster. Finally, it’s smart to run a repair function across the cluster, in order to ensure that all data has been replicated successfully from the original.<strong> </strong></p></section><section class=\"section main-article-chapter\" data-menu-title=\"7) Shut down the original cluster\"><h3 class=\"section-title\"><i class=\"icon\" data-icon=\"1\">7) Shut down the original cluster</i></h3><p>Complete the process with a little post-migration clean up, removing the original cluster. First, change the firewall rules to disconnect the original cluster from the new one. Then, update the replication settings in the new cluster to cease replication of data to the original cluster. Lastly, shut the original cluster down.</p><p>There you have it: your Apache Cassandra deployment has been fully migrated, with zero downtime, low risk and in a manner completely seamless and transparent from the perspective of your end users.</p><p><em>You can follow </em><em><a href=\"https://twitter.com/instaclustr?lang=en\">Instaclustr on Twitter</a>.</em></p><p><img class=\"wp-align alignnone size-full wp-image-1934\" src=\"https://itknowledgeexchange.techtarget.com/open-source-insider/files/2017/11/111P0AlzIUIAA0fc-.jpg\" alt=\"\" width=\"580\" height=\"441\" srcset=\"https://itknowledgeexchange.techtarget.com/open-source-insider/files/2017/11/111P0AlzIUIAA0fc-.jpg 580w, https://itknowledgeexchange.techtarget.com/open-source-insider/files/2017/11/111P0AlzIUIAA0fc--300x228.jpg 300w\" /></p></section>"}}]}},"pageContext":{"alternative_id":12144}}