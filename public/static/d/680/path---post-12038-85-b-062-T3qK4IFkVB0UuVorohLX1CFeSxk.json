{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Introduction - Setup lambda architecture example","alternative_id":12038,"content":"<p></p><h2>SETUP LAMBDA ARCHITECTURE EXAMPLE</h2>\n\t\t\t\t<h3>1. Introduction - Setup lambda architecture example</h3>\n\t\t\t\t\n\t\t\t\t24 March 2016<div><p>Let’s see how to build a lambda architecture example (LAE) for processing huge log data.</p><h2 id=\"what-is-the-lambda-architecture\">What is the Lambda Architecture?</h2><p>Nathan Marz came up with the term Lambda Architecture (LA) for a generic, scalable and fault-tolerant data processing architecture, based on his experience working on distributed data processing systems at Backtype and Twitter.</p><p>The LA aims to satisfy the needs for a robust system that is fault-tolerant, both against hardware failures and human mistakes, being able to serve a wide range of workloads and use cases, and in which low-latency reads and updates are required. The resulting system should be linearly scalable, and it should scale out rather than up.</p><p>Here’s how it looks like, from a high-level perspective:</p><p><img src=\"https://skyhenryk.github.io/images/lambda-architecture/1/lamdbda-architecture.png\" alt=\"LA screenshot\" /></p><p>The Lambda Architecture (cred. http://lambda-architecture.net/)</p><h2 id=\"lambda-architecture-example\">Lambda Architecture Example</h2><p><img src=\"https://skyhenryk.github.io/images/lambda-architecture/1.png\" alt=\"LA screenshot\" /></p><p><strong>lambda architecture example (LAE)</strong></p><p>Let’s build lambda architecture example (LAE) one by one with introduction and codes.</p><p>The most diffrent thing is that I put buffering layer for this example lambda architecture.</p><p>If the log data goes from api server to S3 or spark-streaming directly, it needs a long time to wait to send a data\nbecause I assume that there are <strong>quite many API server to send a log at the same time</strong> and threads of aws-cli(to send a data to s3) and spark-streaming are limited\nSo I will use kafka - distributed replicated cluster messaging system. It will help the api servers not to wait to send the log data.</p><p>In next post, We will learn about kafka and see how to setup for LAE.</p><h2 id=\"contents\">Contents</h2><ol><li>\n    <p>Intro to lambda architecture example (LAE) setup</p>\n  </li>\n  <li>\n    <p>Kafka - zookeeper (Distribution Layer)</p>\n    <p>2-1. Kafka - zookeeper single-server setup</p>\n    <p>2-2. Kafka - zookeeper multi-server setup</p>\n  </li>\n  <li>\n    <p>Spark streaming (Speed Layer)</p>\n    <p>3-1. Spark-streaming setup and connect with LAE</p>\n  </li>\n  <li>\n    <p>Cassandra (Query Layer)</p>\n    <p>4-1. NoSQL database performance comparison (canssandra, hbase, etc.)</p>\n    <p>4-2. Cassandra db setup and connect with LAE</p>\n  </li>\n  <li>\n    <p>Example API server setup and connect with LAE</p>\n  </li>\n  <li>\n    <p>S3 setup and connect with LAE (Batch Layer)</p>\n  </li>\n  <li>\n    <p>Spark, Zeppelin setup and connect with LAE (View Layer)</p>\n  </li>\n  <li>\n    <p>Docker setup for LAE</p>\n  </li>\n</ol><noscript><div>Please enable JavaScript to view the <a href=\"https://disqus.com/?ref_noscript\">comments powered by Disqus.</a></div></noscript></div>"}}]}},"pageContext":{"alternative_id":12038}}