{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"MiracleDevs/Paradigm.ORM","alternative_id":10838,"content":"<h3>\n      \n      README.md\n    </h3><article class=\"markdown-body entry-content\" itemprop=\"text\"><p><a href=\"https://travis-ci.org/MiracleDevs/Paradigm.ORM\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/a10b3ac4adbc98d739ba7dc38052039ce7e10730/68747470733a2f2f7472617669732d63692e6f72672f4d697261636c65446576732f506172616469676d2e4f524d2e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/MiracleDevs/Paradigm.ORM.svg?branch=master\" /></a></p>\n<table><thead><tr><th>Library</th>\n<th>Nuget</th>\n<th>Install</th>\n</tr></thead><tbody><tr><td>Data</td>\n<td><a href=\"https://www.nuget.org/packages/Paradigm.ORM.Data/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/67a06bea41473cc287b680dc648a4d95c8a0fc4f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4e756765742e436f72652e737667\" alt=\"NuGet\" data-canonical-src=\"https://img.shields.io/nuget/v/Nuget.Core.svg\" /></a></td>\n<td><code>Install-Package Paradigm.ORM.Data</code></td>\n</tr><tr><td>MySql</td>\n<td><a href=\"https://www.nuget.org/packages/Paradigm.ORM.Data.MySql/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/67a06bea41473cc287b680dc648a4d95c8a0fc4f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4e756765742e436f72652e737667\" alt=\"NuGet\" data-canonical-src=\"https://img.shields.io/nuget/v/Nuget.Core.svg\" /></a></td>\n<td><code>Install-Package Paradigm.ORM.Data.MySql</code></td>\n</tr><tr><td>PostgreSQL</td>\n<td><a href=\"https://www.nuget.org/packages/Paradigm.ORM.Data.PostgreSql/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/67a06bea41473cc287b680dc648a4d95c8a0fc4f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4e756765742e436f72652e737667\" alt=\"NuGet\" data-canonical-src=\"https://img.shields.io/nuget/v/Nuget.Core.svg\" /></a></td>\n<td><code>Install-Package Paradigm.ORM.Data.PostgreSql</code></td>\n</tr><tr><td>SQL Server</td>\n<td><a href=\"https://www.nuget.org/packages/Paradigm.ORM.Data.SqlServer/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/67a06bea41473cc287b680dc648a4d95c8a0fc4f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4e756765742e436f72652e737667\" alt=\"NuGet\" data-canonical-src=\"https://img.shields.io/nuget/v/Nuget.Core.svg\" /></a></td>\n<td><code>Install-Package Paradigm.ORM.Data.SqlServer</code></td>\n</tr><tr><td>Cassandra</td>\n<td><a href=\"https://www.nuget.org/packages/Paradigm.ORM.Data.Cassandra/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/67a06bea41473cc287b680dc648a4d95c8a0fc4f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4e756765742e436f72652e737667\" alt=\"NuGet\" data-canonical-src=\"https://img.shields.io/nuget/v/Nuget.Core.svg\" /></a></td>\n<td><code>Install-Package Paradigm.ORM.Data.Cassandra</code></td>\n</tr></tbody></table>\n<p>.NET Core ORM with dbfirst support, and code scaffolding features. This ORM supports different database sources.</p>\n<h2><a id=\"user-content-self-contained-deploy-scd\" class=\"anchor\" aria-hidden=\"true\" href=\"#self-contained-deploy-scd\"></a>Self Contained Deploy (SCD)</h2>\n<p>Bellow you can find portable versions for all major OSs.\nIf you are planning to use the tools in several projects, we recommend to add the SCD folder to your PATH.</p>\n<table><thead><tr><th>Tool</th>\n<th>OS</th>\n<th>Zip File</th>\n</tr></thead><tbody><tr><td>DbFirst</td>\n<td>Windows x86</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbfirst.win-x86.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DbFirst</td>\n<td>Windows x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbfirst.win-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DbFirst</td>\n<td>Linux x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbfirst.linux-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DbFirst</td>\n<td>OSX x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbfirst.osx-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>\n</td><td>\n</td><td>\n</td></tr><tr><td>DbPublisher</td>\n<td>Windows x86</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbpublisher.win-x86.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DbPublisher</td>\n<td>Windows x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbpublisher.win-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DbPublisher</td>\n<td>Linux x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbpublisher.linux-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DbPublisher</td>\n<td>OSX x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dbpublisher.osx-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>\n</td><td>\n</td><td>\n</td></tr><tr><td>DataExport</td>\n<td>Windows x86</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dataexport.win-x86.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DataExport</td>\n<td>Windows x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dataexport.win-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DataExport</td>\n<td>Linux x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dataexport.linux-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr><tr><td>DataExport</td>\n<td>OSX x64</td>\n<td><a href=\"https://raw.githubusercontent.com/MiracleDevs/Paradigm.ORM/master/dist/dataexport.osx-x64.zip\" rel=\"nofollow\">Download</a></td>\n</tr></tbody></table><h2><a id=\"user-content-change-log\" class=\"anchor\" aria-hidden=\"true\" href=\"#change-log\"></a>Change log</h2>\n<p>Version <code>2.2.4</code></p>\n<ul><li>Added visual basic tests.</li>\n<li>Updated nuget dependencies.</li>\n<li>Fixed a couple of bugs found with the vb tests.</li>\n</ul><p>Version <code>2.2.3</code></p>\n<ul><li>Added new DatabaseCommandException thrown when executing database commands. The DatabaseCommandException contains a reference to the\nexecuting command, allowing for a better debugging experience.\nUse Command.CommandText to observe the sql or cql query being executed.\nUse Command.Parameters to observe the parameters bound to the query.</li>\n<li>Fixed a bug in Cassandra connector not adding a parameter in one of the AddParameters methods.</li>\n<li>Fixed a bug in CustomQuery sync execution not updated the command text after parameter replacement.</li>\n<li>Improved and updated tests.</li>\n</ul><p>Version <code>2.2.2</code></p>\n<ul><li>Removed mandatory data type in ColumnAttribute. The orm will choose the default column types for each database type.</li>\n<li>Changed how the CommandBatch replace parameter names, to prevent name collision.</li>\n<li>Added tests for the command batch name replacement.</li>\n<li>Changed how select parameters are replaced, from @Index to  @pIndex or :pIndex, depending on the database parameter naming conventions.</li>\n<li>Updated NuGet dependencies.</li>\n</ul><p>Version <code>2.2.1</code></p>\n<ul><li>Added a cache service for descriptors all over the orm, to prevent tons of small objects filling the heap.</li>\n<li>Removed constructors receiving descriptors. Now all the ORM classes should refer to the cache for descriptors.</li>\n<li>Descriptor constructors are now internal and can not be instantiated outside the ORM.</li>\n</ul><p>Version <code>2.2.0</code></p>\n<ul><li>Refactor command handling to allow parallel execution of the ORM without conflicting with some of the\nconnectors. The orm does not cache a command inside the command builder any more.</li>\n<li>Refactor command builders and moved shared functionality to the core classes, and removed the\nduplication from the client implementations. Now will be even easier to implement new clients.</li>\n<li>Moved base protected methods from the CommandBuilderBase to the ICommandFormatProvider and added a new\nbase CommandFormatProviderBase with shared behavior for all the different format providers.</li>\n<li>Removed IDisposable interface from most of the ORM core classes. The most notable are:\n<ul><li>Database access</li>\n<li>Query</li>\n<li>Custom query</li>\n<li>All the stored procedure types</li>\n<li>Schema Provider</li>\n</ul></li>\n<li>Removed extension methods for the IDatabaseConnector not used any more.</li>\n</ul><p>Version <code>2.1.7</code></p>\n<ul><li>Changed how the DatabaseAccess classes utilize the BatchManager to be thread safe.</li>\n</ul><p>Version <code>2.1.6</code></p>\n<ul><li>Updated Paradigm.Core and other dependencies.</li>\n<li>Published new versions for the tools.</li>\n</ul><p>Version <code>2.1.5</code></p>\n<ul><li>Removed a dependency over generic entities that needed a parameterless constructor\nin all the solution.</li>\n</ul><p>Version <code>2.1.4</code></p>\n<ul><li>Removed a dependency over generic entities that needed a parameterless constructor.</li>\n</ul><p>Version <code>2.1.3</code></p>\n<ul><li>Added new constructor to <code>DatabaseReaderMapper</code> to allow set both the service provider and the\ndatabase connector. This will allow multi-tenancy support using the dbfirst generated code.</li>\n<li>Added new constructors to all the stored procedure types for the same reason as the previous point.</li>\n<li>Added missing ValueConverter inside the database reader value provider.</li>\n</ul><p>Version <code>2.1.2</code></p>\n<ul><li>Changed the database reader mappers to work with the <code>IServiceProvider</code> class. Now, will try to instantiate\nthe entities with the service provider first, and if the service provider can't, will use the activator to\ncreate a new instance. This will allow the Paradigm.Services framework to fully delegate the instancing to\nDI allowing better DDD.</li>\n</ul><p>Version <code>2.1.1</code></p>\n<ul><li>Fixed a problem in cassandra connector where the schema provider can not guess the column type when the column is a\nclustering key with order applied to it.</li>\n<li>Made the modifications to the tests to test the above problem.</li>\n</ul><p>Version <code>2.1.0</code></p>\n<ul><li>Added a new Cassandra connector.\nThis new connector allows to work against Apache Cassandra o ScyllaDB. There are some limitations imposed by the\nDataStax connector, and other imposed by the orm, but for most cases will be just fine.</li>\n</ul><blockquote>\n<p>Warning: The ORM will work with column families that mimic sql tables, aka. without lists, maps, or other not standard\nrelational databases. Even if Cassandra does not supports joins, the ORM allows to create virtual foreign keys between tables\nand create navigation properties from it.</p>\n</blockquote>\n<ul><li>Data Export, DbFirst and DbPublisher can work now against Cassandra and ScyllaDB.</li>\n<li>In all the configuration files, now the Database Type changed to Upper Camel Case syntax, the database types are:\n<ul><li>SqlServer,</li>\n<li>MySql,</li>\n<li>PostgreSql,</li>\n<li>Cassandra</li>\n</ul></li>\n<li>Updated MySql Connector version.</li>\n</ul><p>Version <code>2.0.1</code></p>\n<ul><li>Updated Paradigm.Core to version <code>2.0.1</code>.</li>\n</ul><p>Version <code>2.0.0</code></p>\n<ul><li>Updated .net core from version 1 to version 2.</li>\n</ul><p>Version <code>1.0.0</code></p>\n<ul><li>Uploaded first version of the Paradigm ORM.</li>\n</ul></article>"}}]}},"pageContext":{"alternative_id":10838}}