{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"GoCQL","alternative_id":11803,"content":"<div class=\"row\"><div class=\"col-lg-6\"><img src=\"http://gocql.github.io/gocql.png\" alt=\"GoCQL logo\" class=\"pull-left logo\" /></div></div><p><strong>Under Development:</strong> The GoCQL package is currently actively\n\tdeveloped and the API may change in the future.</p><div class=\"row\"><div class=\"col-lg-3\"><h3>Cluster Management</h3><p>GoCQL automatically discovers all data centers, racks and hosts\n\t\tin your cluster, manages a pool of connections to them and distributes\n\t\tqueries in a reasonable and efficient way.</p></div><div class=\"col-lg-3\"><h3>Type Conversion</h3><p>Automatic and safe type conversion between Cassandra and Go without\n\t\tany loss of precision. Basic types, collections and UUIDs are supported\n\t\tby default and custom types can implement their own marshaling logic.</p></div><div class=\"col-lg-3\"><h3>Synchronous and Concurrent</h3><p>Synchronous API with an asynchronous and concurrent back-end. Each\n\t\tconnection can handle up to 128 concurrent queries and may receive\n\t\tserver side push events at any time.</p></div><div class=\"col-lg-3\"><h3>Failover Management</h3><p>TODO :(</p></div></div><div class=\"row\"><div class=\"col-lg-3\"><h3>Result Paging</h3><p>Iterate over large results sets and let GoCQL fetch one page after\n\t\tanother. The next page is automatically pre-fetched in the background\n\t\tonce the iterator has passed a certain threshold.</p></div><div class=\"col-lg-3\"><h3>Atomic Batches</h3><p>Execute a batch of related updates in a single query. GoCQL supports\n\t\tlogged, unlogged and counter batches.</p></div><div class=\"col-lg-3\"><h3>Query Tracing</h3><p>Trace queries to obtain a detailed output of all events that\n\t\thappened during the query execution from Cassandra. The output might\n\t\thelp to identify bugs and performance bottlenecks in your\n\t\tapplication.</p></div><div class=\"col-lg-3\"><h3>Frame Compression</h3><p>Speed up and reduce the network traffic by compressing the frames\n\t\tthat are sent to Cassandra.\n\t\t<a href=\"https://code.google.com/p/snappy/\">Snappy</a>, a\n\t\tcompression algorithm that aims for very high speeds and reasonable\n\t\tcompression, is enabled by default.</p></div></div><div class=\"row\"><div class=\"col-lg-3\"><h3>Multiple Cassandra Versions</h3><p>GoCQL supports multiple Cassandra version. Currently Cassandra 1.2\n\t\tand Cassandra 2.0 are fully supported.</p></div><div class=\"col-lg-3\"><h3>Thoroughly Tested</h3><p>TODO :(</p></div><div class=\"col-lg-3\"><h3>BSD License</h3><p>Completely open source. Browse the source on\n\t\t<a href=\"https://github.com/gocql/gocql\">GitHub</a> and start\n\t\tcontributing today.</p></div></div>"}}]}},"pageContext":{"alternative_id":11803}}