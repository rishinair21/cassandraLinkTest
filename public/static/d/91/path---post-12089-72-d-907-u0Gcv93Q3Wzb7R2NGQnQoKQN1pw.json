{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Apache Cassandra, Part 6: Time Series Modelling","alternative_id":12089,"content":"<section class=\"section section--body section--first\"><div class=\"section-content\"><div class=\"section-inner sectionLayout--insetColumn\"><p id=\"8c30\" class=\"graf graf--p graf-after--h3 graf--trailing\">This <a href=\"https://blog.emumba.com/apache-cassandra-part-1-introduction-and-key-features-18d02ba0b8cc\" data-href=\"https://blog.emumba.com/apache-cassandra-part-1-introduction-and-key-features-18d02ba0b8cc\" class=\"markup--anchor markup--p-anchor\" target=\"_blank\">series of posts</a> present an introduction to Apache Cassandra. It discusses key Cassandra features, its core concepts, how it works under the hood, how it is different from other data stores, data modelling best practices with examples, and some tips &amp; tricks.</p></div></div></section><section class=\"section section--body section--last\"><div class=\"section-content\"><div class=\"section-inner sectionLayout--insetColumn\"><figure id=\"aa5d\" class=\"graf graf--figure graf--leading\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*cS211TKA5VDdyTai6iIhzQ.png\" data-width=\"400\" data-height=\"260\" src=\"https://cdn-images-1.medium.com/max/1600/1*cS211TKA5VDdyTai6iIhzQ.png\" alt=\"image\" /></div></figure><p id=\"00b6\" class=\"graf graf--p graf-after--figure\">Consider a scenario where we have weather data coming in from various weather stations and we have to store key value pairs of time and temperature against each station.</p><p id=\"e0f9\" class=\"graf graf--p graf-after--p\">Cassandra supports up to 2 Billion key value pairs in a row which means we can design our data model like this.</p><figure id=\"f3e5\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*HblEiC167FNClfQ9iEzgTA.png\" data-width=\"800\" data-height=\"95\" data-action=\"zoom\" data-action-value=\"1*HblEiC167FNClfQ9iEzgTA.png\" src=\"https://cdn-images-1.medium.com/max/1600/1*HblEiC167FNClfQ9iEzgTA.png\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"https://academy.datastax.com/resources/getting-started-time-series-data-modeling\" data-href=\"https://academy.datastax.com/resources/getting-started-time-series-data-modeling\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener noopener noopener noopener noopener\" target=\"_blank\">https://academy.datastax.com/resources/getting-started-time-series-data-modeling</a></figcaption></figure><p id=\"0449\" class=\"graf graf--p graf-after--figure\">In this design station Id is partition key, therefore, we will be able to easily find partition containing data from a particular station. Each station would be transmitting data points at same rate, so each partition will have same amount of data. Hence the proposed data model satisfies both of the Cassandraâ€™s data modelling goals.</p><p id=\"010a\" class=\"graf graf--p graf-after--p\">But there is a problem, if a weather station transmits a new entry every second, we are will end up with huge partitions pretty soon. An improvement could be to create a composite partition key using station Id and date like this.</p><figure id=\"d516\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*3P0oxHxASLCry3qAP_Cjdg.png\" data-width=\"800\" data-height=\"144\" data-action=\"zoom\" data-action-value=\"1*3P0oxHxASLCry3qAP_Cjdg.png\" src=\"https://cdn-images-1.medium.com/max/1600/1*3P0oxHxASLCry3qAP_Cjdg.png\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"https://academy.datastax.com/resources/getting-started-time-series-data-modeling\" data-href=\"https://academy.datastax.com/resources/getting-started-time-series-data-modeling\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener noopener noopener noopener noopener\" target=\"_blank\">https://academy.datastax.com/resources/getting-started-time-series-data-modeling</a></figcaption></figure><p id=\"bc62\" class=\"graf graf--p graf-after--figure\">This way we achieve manageable sized partitions and efficient date wise access to weather data.</p><p id=\"5d89\" class=\"graf graf--p graf-after--p\">In weather domain most of the queries will involve latest data. Our current model appends each new entry at the end, therefore, to find the latest N records Cassandra will go until the end of partition and read last N records. A better approach could be to store data in reverse timestamp order like this.</p><figure id=\"c620\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*BwA91ED4qAGd4UyCPG7ydA.png\" data-width=\"800\" data-height=\"122\" data-action=\"zoom\" data-action-value=\"1*BwA91ED4qAGd4UyCPG7ydA.png\" src=\"https://cdn-images-1.medium.com/max/1600/1*BwA91ED4qAGd4UyCPG7ydA.png\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"https://academy.datastax.com/resources/getting-started-time-series-data-modeling\" data-href=\"https://academy.datastax.com/resources/getting-started-time-series-data-modeling\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener noopener noopener noopener noopener\" target=\"_blank\">https://academy.datastax.com/resources/getting-started-time-series-data-modeling</a></figcaption></figure><p id=\"d0ff\" class=\"graf graf--p graf-after--figure\">This approach will reduce our read cost by keeping fresh data at start of partition. Older data can be deleted from the end to keep the partition size manageable.</p><p id=\"a354\" class=\"graf graf--p graf-after--p\">Cassandra also provides a data type <strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">time-uuid</em></strong> that comes handy when multiple events might come in with same timestamp. To avoid timestamp collision time-uuid appends timestamp with a random Id which guarantees record uniqueness.</p><p id=\"3724\" class=\"graf graf--p graf-after--p graf--trailing\"><a href=\"https://blog.emumba.com/apache-cassandra-part-7-secondary-index-replication-and-tips-da273ea59993\" data-href=\"https://blog.emumba.com/apache-cassandra-part-7-secondary-index-replication-and-tips-da273ea59993\" class=\"markup--anchor markup--p-anchor\" target=\"_blank\">Next: Apache Cassandra, Part 7: Secondary Index, Replication, Tips</a></p></div></div></section>"}}]}},"pageContext":{"alternative_id":12089}}