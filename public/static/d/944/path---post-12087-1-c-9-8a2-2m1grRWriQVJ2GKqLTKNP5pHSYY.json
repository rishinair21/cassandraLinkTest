{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Apache Cassandra, Part 4: Data Flow and Core Concepts","alternative_id":12087,"content":"<section class=\"section section--body section--first\"><div class=\"section-content\"><div class=\"section-inner sectionLayout--insetColumn\"><p id=\"6468\" class=\"graf graf--p graf-after--h3 graf--trailing\">This <a href=\"https://blog.emumba.com/apache-cassandra-part-1-introduction-and-key-features-18d02ba0b8cc\" data-href=\"https://blog.emumba.com/apache-cassandra-part-1-introduction-and-key-features-18d02ba0b8cc\" class=\"markup--anchor markup--p-anchor\" target=\"_blank\">series of posts</a> present an introduction to Apache Cassandra. It discusses key Cassandra features, its core concepts, how it works under the hood, how it is different from other data stores, data modelling best practices with examples, and some tips &amp; tricks.</p></div></div></section><section class=\"section section--body section--last\"><div class=\"section-content\"><div class=\"section-inner sectionLayout--insetColumn\"><p id=\"93d6\" class=\"graf graf--p graf--leading\">Data flow in Cassandra looks like this:</p><figure id=\"0e45\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"0*dS05FUEJe4Bdz-TP.\" data-width=\"490\" data-height=\"218\" src=\"https://cdn-images-1.medium.com/max/1600/0*dS05FUEJe4Bdz-TP.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"https://docs.datastax.com/en/cassandra/3.0/cassandra/dml/dmlHowDataWritten.html\" data-href=\"https://docs.datastax.com/en/cassandra/3.0/cassandra/dml/dmlHowDataWritten.html\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener noopener noopener noopener noopener noopener\" target=\"_blank\">https://docs.datastax.com/en/cassandra/3.0/cassandra/dml/dmlHowDataWritten.html</a></figcaption></figure><p id=\"8a36\" class=\"graf graf--p graf-after--figure\">Incoming data is written into a commit log as well as in an in-memory store. Once the in-memory store is full, data is flushed onto disk in <a href=\"https://wiki.apache.org/cassandra/MemtableSSTable\" data-href=\"https://wiki.apache.org/cassandra/MemtableSSTable\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">SSTables</a>. Purpose of committing data into commit log is to provide fault tolerance. If a node goes down while there was still data in in-memory table which was yet to be persisted, on restart, node restores it’s in-memory state using commit log and resumes operation normally.</p><h3 id=\"1312\" class=\"graf graf--h3 graf-after--p\">Core Cassandra Concepts</h3><p id=\"76ce\" class=\"graf graf--p graf-after--h3\">Two concepts are of utmost importance to understand Cassandra and its data modelling.</p><p id=\"1b64\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Partition Key</strong>: determines on which node in a Cassandra cluster data is going to be stored.</p><figure id=\"0d6b\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*GxAcqjhrUB2bKoK4EPipSA.png\" data-width=\"400\" data-height=\"362\" data-is-featured=\"true\" src=\"https://cdn-images-1.medium.com/max/1600/1*GxAcqjhrUB2bKoK4EPipSA.png\" alt=\"image\" /></div></figure><p id=\"6593\" class=\"graf graf--p graf-after--figure\">The hash function or Cassandra partitioner decides, based on the partition key, which data to send at what node.</p><p id=\"3ef5\" class=\"graf graf--p graf-after--p\">For example, say you want to store data of four cities A, B, C and D. You have a 2 node Cassandra cluster. You choose city name as partition key. To store this data Cassandra will create four partitions (against 4 unique cities), 2 on each node.</p><p id=\"9002\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Clustering Key</strong>: determines how data is sorted within a partition. Continuing on our last example, let’s say each incoming data point has a city name (A, B, C or D) and an associated timestamp. You can tell Cassandra to use timestamp as clustering key to store data in sorted order within a partition. This will enable efficient data lookup within a partition.</p><p id=\"8dcf\" class=\"graf graf--p graf-after--p\">In short, partition key helps Cassandra in locating the node with specific data, while clustering key helps in efficiently finding data within a partition.</p><p id=\"1272\" class=\"graf graf--p graf-after--p\">Both partition and clustering key can be composite.</p><h3 id=\"3e08\" class=\"graf graf--h3 graf-after--p\">Column Family Store</h3><p id=\"e5b8\" class=\"graf graf--p graf-after--h3\">As discussed earlier, Cassandra is neither a row based store nor it is a column based store, rather it is a column family store. But what does that mean?</p><p id=\"1548\" class=\"graf graf--p graf-after--p\">One way to understand how Cassandra stores its data is this data structure:</p><p id=\"f46e\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">Map&lt;RowKey, SortedMap&lt;ColumnKey, ColumnValue&gt;&gt;</em></strong></p><p id=\"80ed\" class=\"graf graf--p graf-after--p\">Each row is mapped to a node using partition key, and the value is a set of key value pairs sorted by clustering key.</p><figure id=\"a48a\" class=\"graf graf--figure graf-after--p\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"0*P86RdHPAaHFLJaEO.\" data-width=\"1122\" data-height=\"244\" data-action=\"zoom\" data-action-value=\"0*P86RdHPAaHFLJaEO.\" src=\"https://cdn-images-1.medium.com/max/1600/0*P86RdHPAaHFLJaEO.\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"https://www.ebayinc.com/stories/blogs/tech/cassandra-data-modeling-best-practices-part-1/\" data-href=\"https://www.ebayinc.com/stories/blogs/tech/cassandra-data-modeling-best-practices-part-1/\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener noopener noopener noopener noopener\" target=\"_blank\">https://www.ebayinc.com/stories/blogs/tech/cassandra-data-modeling-best-practices-part-1/</a></figcaption></figure><p id=\"b9b4\" class=\"graf graf--p graf-after--figure\">In other words, Cassandra is a partitioned row store, where data is partitioned by partition key and, within a partition, sorted by clustering key.</p><p id=\"e914\" class=\"graf graf--p graf-after--p graf--trailing\"><a href=\"https://blog.emumba.com/apache-cassandra-part-5-data-modelling-in-cassandra-9e81a58f4ada\" data-href=\"https://blog.emumba.com/apache-cassandra-part-5-data-modelling-in-cassandra-9e81a58f4ada\" class=\"markup--anchor markup--p-anchor\" target=\"_blank\">Next: Apache Cassandra, Part 5: Data Modelling with Examples</a></p></div></div></section>"}}]}},"pageContext":{"alternative_id":12087}}