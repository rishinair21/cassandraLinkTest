{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"AN10 | IoT, Cassandra, Big Data","alternative_id":12013,"content":"<h2 itemprop=\"name\" class=\"entry_title\">20 Jul Cassandra and IoT queries: Are they a good match?</h2><p><em>Cassandra is known to be an industry standard Database for storing Big Data (Volume, Velocity, and Variability), and an IoT platform is really a canonical representation of such a use case. We present here benchmarking results for some typical IoT query cases we were experiencing in the design of ORION, our IoT platform. The aim is to understand when, and perhaps more importantly, how Cassandra can play an important role for this important use case.</em></p><p><em>Authors: </em>Arbab Khalil, Affan Syed</p><h2>Introduction</h2><p>At AN10, we are developing an entire Internet of Things ecosystem, building the entire value chain of IoT products and services: from intelligent sensors and gateways at the edge, to our industrial IoT platform ORION, to high-performance applications and solution suites for specific industries.</p><p>The core of our entire product &amp; service offering is ORION, a Big Data capable, highly scalable and full-featured IoT platform. An IoT platform provides the capabilities of IoT device management, scalable data management &amp; analytics, and robust APIs on top. The idea is for the platform to do the heavy lifting, and provide applications with IoT capabilities through API calls. Building this platform has required reviewing, testing, and adapting quite a few data stacks, tools and technologies. As an open company, we want to share our experiences with using these technologies as part of a series of blogs. These will take the form of an evidence-based article, showing real-world results.</p><h2>The data-analytics stack for ORION</h2><p>One of the basic functions of an IoT platform is that it  meant to scale and receive data from million of devices every minute.  As such, we decided to stick with using a big data stack that matches, at the first cut,  our need to scale: thus we went with the SMACK (Spark, Mesos, Akka, Cassandra, Kafka) stack [1].  To summarize this stack, it allows horizontal scalability in every aspect of a Big Data stack. Cassandra scales the big data storage at high write speeds, Spark provides a distributed analytic engine, Mesos provides the cluster and resource monitoring and management capability, while Kafka and Akka enable a queue-based microservices architecture to build features around a real-time data pipeline.</p><p>We use  Cassandra, where the table schema has to be optimized (denormalized) for the type of queries we expect the platform to execute. This is a well known tradeoff (footnote: while there are a host of wonderful articles about how to build schema in Cassandra for IoT, this article is not it), but we wanted to better evaluate the different schema models for the type of queries, generally, we expect our platform to handle.</p><blockquote class=\"\"><h5 class=\"blockquote-text\">we wanted to better evaluate the different schema models for the type of queries, generally, we expect our platform to handle.</h5></blockquote><h3>A generic IoT query</h3><p>IoT application have a general nature where devices report sensor data on regular intervals (as well as irregular events, but we will leave those aside for the current discussion). This sampling rate implies a time-series data which demands windowed queries; however, IoT applications have another topological mapping that requires queries to range over a group of devices (lets assume uniquely identified by a device id) — this can for region specific or collocation related analysis.</p><p>Thus, typically, while the need to look at real-time data can be separated per device, analytical queries will demand queries that range over both time and device ids . This is the generic query we were experiencing being demanded by our customers in the IoT domain.</p><p>While using several best-practices for time-series schema design in Cassandra, there are a few other constraints that crop up that make no particular schema design a clear winner, and require detailed benchmarking (thus this effort). One such is the issue of ensuring that partition sizes are not exceptionally large, so we need a way to have a deterministic break down on a size, e.g. monthly basis. Another, concern is the issue of partitioning such that all data does not go to a single partition at the same time (e.g. hotspots due to partition key having ONLY date).  These all make the denormalization of data for Cassandra difficult, especially for the case where the range over devices and time cannot be restricted, either.</p><p>In order to evaluate, we came up with a few schema configurations, where we majorly change the PRIMARY_KEY (determining the performance of queries). We consider a simple device with a packet containing the dev_id, date and timestamp for a  single voltage sensor (different sensors will have different tables for now, we can also keep them in one, but again a distraction from the current evaluation).</p><div><pre>#### C* table1 ####</pre><pre>CREATE TABLE test_timeseries.timeseries_with_date1 (</pre><pre>    dev_id text,</pre><pre>    day date,</pre><pre>    rec_time timestamp,</pre><pre>    voltage float,</pre><pre>    <code>PRIMARY KEY ((dev_id, rec_time), day)</code></pre><pre>) WITH CLUSTERING ORDER BY (day ASC)</pre><pre>#### C* table2 ####</pre><pre>CREATE TABLE test_timeseries.timeseries_with_date2 (</pre><pre>    dev_id text,</pre><pre>    day date,</pre><pre>    rec_time timestamp,</pre><pre>    voltage float,</pre><pre>    <code>PRIMARY KEY (dev_id, day, rec_time)</code></pre><pre>) WITH CLUSTERING ORDER BY (day ASC, rec_time ASC)</pre><pre>#### C* table3 ####</pre><pre>CREATE TABLE test_timeseries.timeseries_with_date3 (</pre><pre>    day date,</pre><pre>    dev_id text,</pre><pre>    rec_time timestamp,</pre><pre>    voltage float,</pre><pre>    <code>PRIMARY KEY (day, dev_id, rec_time)</code></pre><pre>) WITH CLUSTERING ORDER BY (dev_id ASC, rec_time ASC)</pre><pre>#### C* table4 ####</pre><pre>CREATE TABLE test_timeseries.timeseries_with_date4 (</pre><pre>    day date,</pre><pre>    dev_id text,</pre><pre>    rec_time timestamp,</pre><pre>    voltage float,</pre><pre>   <code> PRIMARY KEY ((day, dev_id), rec_time)</code></pre><pre>) WITH CLUSTERING ORDER BY (rec_time ASC)</pre><pre>#### C* table5 ####</pre><pre>CREATE TABLE test_timeseries.timeseries_with_date5 (</pre><pre>    dev_id text,</pre><pre>    day date,</pre><pre>    rec_time timestamp,</pre><pre>    voltage float,</pre><pre>    <code>PRIMARY KEY ((dev_id, day), rec_time)</code></pre><p><code>) WITH CLUSTERING ORDER BY (rec_time ASC)</code></p></div><h2>Evaluation Framework:</h2><p>We are using a virtual machine with 8 vCPUs and 30 GB memory running Ubuntu Server 16.04. Both Cassandra and Spark are running on same machine with single node deployment. We are using Cassandra:3.11.2, Spark 2.2.0 and Spark-Cassandra-Connector:2.0.7-s_2.11 version.  We use Spark to enable any query optimization possible using its Catalyst engine.</p><h3>Testing Procedure</h3><p>Data-set contains data from 1000 devices, each sending one packet per minute over a total duration of two months (July and Aug 2017) or 62 days. Each table contains 89.28 million entries.</p><p>Initially we benchmarked these 5 tables with three different querying methods available in Spark. We ran a simple count query on each table for different number of devices over variable time duration in days.  We will discuss each method one by one:</p><p>1. where() function of DataFrame API: Conditions on day and dev_id are given through where() function followed by cunt() function on dataframe. This query is performed as follows:</p><div><pre>### Loading Table from Cassandra ###</pre><pre>table1_df = spark.read.format(\"org.apache.spark.sql.cassandra\")\\</pre><pre>    .options(keyspace = 'test_timeseries', table = 'timeseries_with_date').load()</pre><pre>#### Querying table ####</pre><pre>query_table1_df = table1_df.where((col(\"day\") &gt;= \"2017-07-01\") &amp; (col(\"day\") &lt;= \"2017-07-04\") &amp; \\</pre><pre>    (col(\"dev_id\").isin(devices))).count()</pre></div><p>2. Spark SQL Query using range queries: Here we are running queries using Spark SQL API and gives duration through range. It makes writing queries simple and improves code readability. This query is performed as follows:</p><div><pre>#### Loading Table from Cassandra and Registering Temp View ####</pre><pre>spark.read.format(\"org.apache.spark.sql.cassandra\")\\</pre><pre>    .options(keyspace = 'test_timeseries', table = 'timeseries_with_date')\\</pre><pre>    .load().createOrReplaceTempView(\"table1\")</pre><pre>#### Querying table where <code>devices </code><code>is a string having list of all dev_id's ####</code></pre><pre>query_table1 = spark.sql(\"SELECT COUNT(1) FROM table1 WHERE day &gt;= cast('2017-07-01' as date) AND \\</pre><pre>day &lt;= cast('2017-07-15' as date) AND dev_id  IN(\" + devices + \")\" </pre></div><p>3. Spark SQL Query using IN() : Here we are running queries using Spark SQL API and giving dates as list through IN(). This is to check weather range performs better or passing days through IN(). This query is performed as follows:</p><div><pre>query1 = \"SELECT COUNT(1) FROM table1 WHERE day IN \" + dates + \" AND dev_id  IN \" + devices</pre><pre>## <code>dates</code><code> is string containing all days and </code><code>devices</code><code> is string containing all dev_id's</code></pre><pre>query_table1 = spark.sql(query1)</pre></div><p>Results of these queries are shown in Without Year sheet in results sections. Time format is minutes:seconds.milliseconds (MM:SS.sss)</p><h3>Adding another field for performance</h3><p>After reading  Jon Haddad’s article [2] about “Cassandra Time Series Data Modeling For Massive Scale”, we added an extra field of year in partition keys of above four PRIMARY KEYs. Our new dataset contains data from 1000 devices, corresponding to sending one packet per minute over a total duration of four months (Nov 2017 to Feb 2018) or 120 days, thus ensuring two different partitions due to years. Now we have four additional  tables with the same schema but different primary keys:</p><ol><li>    PRIMARY KEY ((year, dev_id), day, rec_time)</li><li>    PRIMARY KEY ((year, day), dev_id, rec_time)</li><li>    PRIMARY KEY ((year, dev_id, day), rec_time)</li><li>    PRIMARY KEY ((year, day, dev_id), rec_time)</li></ol><h2>Results:</h2><p>We performed our experiments and the results were compiled in a publicly visible <a href=\"https://docs.google.com/spreadsheets/d/1Kk6Sgm_sfB34m8oKEOxspcwtZxxM_xwqmCQT6sT8H-Y/edit#gid=0\">sheet</a> shared here [6]. While we encourage the reader to look at it in details, here we replicate one table of the sheet for quick analysis.</p><table dir=\"ltr\" border=\"1\" cellpadding=\"0\" style=\"border-spacing: 0px;\"><colgroup><col width=\"58\" /><col width=\"46\" /><col width=\"117\" /><col width=\"101\" /><col width=\"102\" /><col width=\"118\" /><col width=\"111\" /><col width=\"99\" /><col width=\"100\" /><col width=\"108\" /><col width=\"106\" /><col width=\"100\" /></colgroup><tbody><tr><td colspan=\"2\" rowspan=\"1\" data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;Parameters&quot;}\">Parameters</td><td colspan=\"9\" rowspan=\"1\" data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;PRIMARY KEY&quot;}\">PRIMARY KEY</td><td></td></tr><tr><td colspan=\"2\" rowspan=\"1\"></td><td colspan=\"5\" rowspan=\"1\" data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;Results of Range Queries&quot;}\">Results of Range Queries</td><td colspan=\"4\" rowspan=\"1\" data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;Result of IN() Queries&quot;}\">Result of IN() Queries</td><td></td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;Devices&quot;}\">Devices</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;Days&quot;}\">Days</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;((dev_id, rec_time), day)&quot;}\">((dev_id, rec_time), day)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;(dev_id, day, rec_time)&quot;}\">(dev_id, day, rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;(day, dev_id, rec_time)&quot;}\">(day, dev_id, rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;((day, dev_id), rec_time)&quot;}\">((day, dev_id), rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;((dev_id, day ), rec_time)&quot;}\">((dev_id, day ), rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;(dev_id, day, rec_time)&quot;}\">(dev_id, day, rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;(day, dev_id, rec_time)&quot;}\">(day, dev_id, rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;((day, dev_id), rec_time)&quot;}\">((day, dev_id), rec_time)</td><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;((dev_id, day ), rec_time)&quot;}\">((dev_id, day ), rec_time)</td><td></td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:1}\">1</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:7}\">7</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0033810465046296293}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:52.122</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0000026631828703703703}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.230</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000034860300925925924}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:03.012</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003967326655092592}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:42.777</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003681333287037037}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:18.067</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000038440127314814816}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:03.321</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0007922761921296297}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">01:08.453</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004947186435185186}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">07:07.437</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0046534990625}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:42.062</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:7.435185185185186e-8}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.006</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:1}\">1</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:15}\">15</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004337737326388889}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:14.781</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000003232465277777778}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.279</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0000354265625}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:03.061</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003946980011574074}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:41.019</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003609857824074074}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:11.892</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00003457298611111111}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:02.987</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0016276647222222224}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:20.630</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004781432928240741}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:53.116</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004341447083333333}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:15.101</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:9.082175925925925e-8}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.008</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:1}\">1</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:31}\">31</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.006014227534722223}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:39.629</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000005120648148148148}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.442</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00003518762731481482}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:03.040</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003977694305555555}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:43.673</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003711375648148148}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:20.663</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00003422395833333333}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:02.957</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0031992222685185184}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:36.413</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004778606898148148}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:52.872</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004523499444444444}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:30.830</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:1.2386574074074073e-7}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.011</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:1}\">1</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:62}\">62</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.008353146516203704}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">12:01.712</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000007675104166666666}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.663</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00003424778935185185}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:02.959</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0039016963425925924}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:37.107</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0035999456944444445}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:11.035</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00003884090277777777}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:03.356</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0070086818750000005}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">10:05.550</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005190131238425926}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">07:28.427</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004680102743055556}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:44.361</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:1.364236111111111e-7}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.012</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:200}\">200</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:7}\">7</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003355122141203704}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:49.883</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00014877582175925927}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:12.854</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005958901122685186}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:34.849</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0038958906250000005}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:36.605</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003577375902777778}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:09.085</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0014223928935185185}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:02.895</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0007384906481481481}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">01:03.806</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004818106400462963}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:56.284</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004549877256944445}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:33.109</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0000022571180555555557}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.195</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:200}\">200</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:15}\">15</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004297555648148148}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:11.309</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00030386327546296296}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:26.254</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00585302525462963}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:25.701</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003847285798611111}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:32.405</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0035731719328703703}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:08.722</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0014106333680555555}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:01.879</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0016743773379629629}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:24.666</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0050338127777777774}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">07:14.921</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0044997042129629634}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:28.774</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000004611481481481481}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.398</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:200}\">200</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:31}\">31</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0059676143981481486}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:35.602</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0006084985763888889}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:52.574</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0058990232407407405}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:29.676</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003912620474537037}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:38.050</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003633043587962963}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:13.895</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0014473511689814815}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:05.051</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0033170381597222224}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:46.592</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004918577534722223}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">07:04.965</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004384375324074074}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:18.810</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000005602800925925926}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.484</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:200}\">200</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:62}\">62</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.008374208981481482}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">12:03.532</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0011038888425925926}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">01:35.376</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.006141329837962963}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:50.611</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004063637511574074}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:51.098</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0037832920370370372}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:26.876</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.001436457488425926}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:04.110</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.006365348981481481}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">09:09.966</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004726526493055556}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:48.372</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0044583690625}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:25.203</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000022921412037037037}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:01.980</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;*All&quot;}\">*All</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:7}\">7</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003367778287037037}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:50.976</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0007369423032407408}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">01:03.672</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005769388043981481}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:18.475</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003861304490740741}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:33.617</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003487727175925926}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:01.340</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.007753202800925925}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">11:09.877</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0007695971296296295}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">01:06.493</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004639710219907407}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:40.871</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004197842268518518}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:02.694</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0000073612384259259255}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:00.636</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;*All&quot;}\">*All</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:15}\">15</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004268437083333333}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:08.793</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0015203506481481482}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:11.358</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005865909502314815}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:26.815</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0038259733564814814}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:30.564</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003527004664351852}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:04.733</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.007744230034722223}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">11:09.101</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0015461416435185184}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">02:13.587</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004838077141203704}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:58.010</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0048064288310185185}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:55.275</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.000012391597222222223}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:01.071</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;*All&quot;}\">*All</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:31}\">31</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005901403564814814}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:29.881</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0030778950578703706}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:25.930</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005901267731481481}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:29.870</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0038836484722222222}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:35.547</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003554246261574074}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:07.087</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.008092113958333333}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">11:39.159</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.003171625057870371}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">04:34.028</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004777974583333333}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:52.817</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0041682598379629635}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:00.138</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00004259931712962963}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:03.681</td></tr><tr><td data-sheets-value=\"{&quot;1&quot;:2,&quot;2&quot;:&quot;*All&quot;}\">*All</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:62}\">62</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.008221841087962964}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">11:50.367</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005406336770833333}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">07:47.107</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.005830159722222222}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:23.726</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0037742180208333335}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:26.092</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.0035038981944444446}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">05:02.737</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.007737928217592593}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">11:08.557</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.006104637106481482}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">08:47.441</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004867551064814815}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">07:00.556</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.004536799224537037}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">06:31.979</td><td data-sheets-value=\"{&quot;1&quot;:3,&quot;3&quot;:0.00007961810185185186}\" data-sheets-numberformat=\"[null,6,&quot;mm\\&quot;:\\&quot;ss\\&quot;.\\&quot;000&quot;,1]\">00:06.879</td></tr></tbody></table><h2>Evaluation of Results</h2><p>Here we will briefly discuss the behavior of each PRIMARY KEY with respect to query time and its effect on C* cluster.</p><ol><li>PRIMARY KEY ((dev_id, rec_time), day) :  Our queries are based on day and dev id not on rec_time, so having rec_time before day proved to be a worst case in most of cases.</li><li>PRIMARY KEY (dev_id, day, rec_time) : It seems to be the best case in terms of execution time in both range queries and IN() queries. This has a major problem of large partition size because all data of one device is stored in single partition.</li><li>PRIMARY KEY (day, dev_id, rec_time) : With range queries it didn’t performed well but with IN() queries the execution time is directly proportional to number of days irrespective of number of devices. This has problem of hotspot in C* cluster as single partition contains data of whole day which also results in large partition size.</li><li>PRIMARY KEY ((day, dev_id), rec_time) : The execution time is directly proportional to total table size, almost same for different number of days and number of devices. Although it solves the problem of large partitions and hotspot in C* cluster.</li><li>PRIMARY KEY ((dev_id, day), rec_time) : Its behaviour is almost similar to 4th one.</li><li>PRIMARY KEY ((year, dev_id), day, rec_time) : It is good for lower number of devices but worst cast for higher number of devices. It somehow tries to solve the problem of all data of single device in one partition as it created a partition over year and device id.</li><li>PRIMARY KEY ((year, day), dev_id, rec_time) : The execution time only depends on number of days only, irrespective of number of devices being queried but it is never the worst case. Moreover it has same hotspot issue as mentioned in 2nd PRIMARY KEY.</li><li>PRIMARY KEY ((year, dev_id, day), rec_time) : Its behavior is also to 4th PRIMARY KEY. Moreover adding year field just adds an additional cost as date is already there.</li><li>PRIMARY KEY ((year, day, dev_id), rec_time) : Its behavior is similar to 8th PRIMARY KEY.</li></ol><h3>Other Observations:</h3><p>We observed that having a multi-field partition key allows for fast querying only if the “=” is used going left to right. If an IN() (for specifying eg. range of time or list of devices) is used once that order, than any further usage of IN() removes any benefit (i.e. a near full table scan).</p><p>Another useful observation was that using the IN() to query for days is less useful than putting in a range query.</p><h2>Conclusion:</h2><blockquote class=\"\"><h5 class=\"blockquote-text\">As such, it seems that using Cassandra for serving OLTP and OLAP queries for an IoT use-case is not, perhaps, the best decision. This requires us to know combine Cassandra's industry strength robustness and performance, with another DB that enables fast queries for the typical IoT use case.</h5></blockquote><p>The main takeaways from this benchmarking is that we don’t have a single schema to answer our (IoT) use case without any drawbacks. Thus while the ((day, dev_id), rec_time) gives a constant response, it is dependent entirely on the total data size (full scan). On the other hand, (dev_id, day, rec_time) and its counterpart (day, dev_id, rec_time) provide acceptable results, we have the issue of very large partition space in the first, and hotspot while writing for the latter case.</p><p>As such, it seems that using Cassandra for serving OLTP and OLAP queries for an IoT use-case is not, perhaps, the best decision. This requires us to know combine Cassandra’s industry strength robustness and performance, with another DB that enables fast queries for the typical IoT use case. We are currently evaluating Druid [3], InfluxDB [4], and Kudu [5]  as companion database in this regard. We will keep everyone posted about the final decision and performance results.</p><h4><strong>About Authors</strong></h4><p><em>Arbab is Design Engineer at AN10. akhalil@an10.io<br /></em><em>Affan Syed is Head of Engineering at AN10. <strong><a href=\"https://www.linkedin.com/in/affan-ahmed-syed/\">LinkedIn</a></strong></em></p><h3>References[1] <a href=\"https://www.oreilly.com/ideas/the-smack-stack\">https://www.oreilly.com/ideas/the-smack-stack</a>[2] <a href=\"http://thelastpickle.com/blog/2017/08/02/time-series-data-modeling-massive-scale.html\">http://thelastpickle.com/blog/2017/08/02/time-series-data-modeling-massive-scale.html</a>[3] <a href=\"http://druid.io/\">http://druid.io/</a>[4] <a href=\"https://www.influxdata.com/time-series-platform/influxdb/\">https://www.influxdata.com/time-series-platform/influxdb/</a>[5] <a href=\"https://kudu.apache.org/\">https://kudu.apache.org/</a>[6] <a href=\"https://docs.google.com/spreadsheets/d/1Kk6Sgm_sfB34m8oKEOxspcwtZxxM_xwqmCQT6sT8H-Y/edit#gid=0\">https://docs.google.com/spreadsheets/d/1Kk6Sgm_sfB34m8oKEOxspcwtZxxM_xwqmCQT6sT8H-Y/edit#gid=0</a></h3>"}}]}},"pageContext":{"alternative_id":12013}}