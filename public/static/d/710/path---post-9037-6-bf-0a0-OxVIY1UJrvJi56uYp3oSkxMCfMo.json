{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"cloudurable/cassandra-image","alternative_id":9037,"content":"<p>Goal of this project is to create AMI, Vagrant Box and Docker base images that one could use to deploy Cassandra.</p><p>The docker image is hosted on docker hub (see <a href=\"https://hub.docker.com/r/cloudurable/cassandra/\" rel=\"nofollow\">DockerHub</a>).\nThe vagrant box is hosted on Atlas see (<a href=\"https://atlas.hashicorp.com/cloudurable/boxes/cassandra\" rel=\"nofollow\">Atlas</a>).\nThe source code is hosted on GitHub (see <a href=\"https://github.com/cloudurable/cassandra-image\">GitHub</a>).</p><p>Key features of image, AMI, Vagrant box</p><ul><li>Uses JBOD instead of RAID (not done)</li>\n<li>Uses ergonomics to configure Cassandra based on deployment environment (preliminary work done)</li>\n<li>Sets up security if requested (not done)</li>\n<li>Sets up TLS/SSL if requested (not done)</li>\n<li>Sets up HD encryption if requested (not done, or use encrypted EBS instances)</li>\n<li>Sets up users (not done)</li>\n<li>Installs Cassandra as a systemd service (not done)</li>\n<li>Allows cloud deploy (not done)</li>\n<li>Monitoring (CloudWatch, InfluxDB) (not done)</li>\n<li>Log aggregation (CloudWatch, ELK) (not done)</li>\n<li>Installs JEMalloc and configures Cassandra to use off heap no JVM (done)</li>\n<li>Install JNA (done)</li>\n<li>Configures OS (Linux) to be performant (done)</li>\n</ul><h2>Create a vagrant box</h2><pre>git clone https://github.com/cloudurable/cassandra-image.git\ncd cassandra-image \nvagrant up \n# Connect to vagrant box\ncqlsh localhost 19042\n</pre><h2>Connect to vagrant image</h2><pre>vagrant ssh\n</pre><h2>Create a docker image</h2><pre>git clone https://github.com/cloudurable/cassandra-image.git\ncd cassandra-image \nbin/start-image.sh\n# Connect to docker image\ncqlsh localhost 29042\n</pre><h2>Provisioning</h2><p>We use packer and vagrant to create images.</p><h4>Running setup scripts</h4><pre>## cd ~; mkdir github; cd github; git clone https://github.com/cloudurable/cassandra-image\n$ cd ~/github/cassandra-image\n$ pwd\n~/github/cassandra-image\n## Setup keys\n$ bin/setupkeys-cassandra-security.sh\n## Download binaries\n$ bin/prepare_binaries.sh\n## Bring Vagrant cluster up\n$ vagrant up\n</pre><h4>Working with ansible from bastion</h4><div class=\"highlight highlight-source-shell\"><pre>$ vagrant ssh bastion</pre></div><p>First setup ssh-agent and add keys to it.</p><h4>Start ssh-agent and add keys</h4><pre>$ ssh-agent bash\n$ ssh-add ~/.ssh/test_rsa\n</pre><h4>Ansible Ping server</h4><div class=\"highlight highlight-source-shell\"><pre>$ ansible node0 -m ping</pre></div><p>Output</p><pre>node0 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n</pre><h4>Ansible Ping servers</h4><div class=\"highlight highlight-source-shell\"><pre>$ ansible nodes  -m ping</pre></div><p>Output</p><pre>node0 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\nnode2 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\nnode1 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n</pre><h2>Setting up my MacOSX to run Ansible against instances</h2><p>Move to the where you checked out the <a href=\"https://github.com/cloudurable/cassandra-image\">project</a>.</p><div class=\"highlight highlight-source-shell\"><pre>cd ~/github/cassandra-image</pre></div><h4>Add bastion, node0, etc. to /etc/hosts</h4><div class=\"highlight highlight-source-shell\"><pre>$ cat /etc/hosts\n### Used for ansible/ vagrant\n192.168.50.20  bastion\n192.168.50.4  node0\n192.168.50.5  node1\n192.168.50.6  node2\n192.168.50.7  node3\n192.168.50.8  node4\n192.168.50.9  node5\n</pre></div><h4>Add keys to known_hosts to avoid prompts</h4><div class=\"highlight highlight-source-shell\"><pre>$ ssh-keyscan node0 node1 node2  &gt;&gt; ~/.ssh/known_hosts\n</pre></div><h4>Start ssh-agent and add keys</h4><pre>$ ssh-agent bash\n$ ssh-add ~/.ssh/test_rsa\n</pre><h4>Notice the ansible.cfg file and inventory.ini file in the project dir</h4><pre>$ cd ~/github/cassandra-image\n$ cat ansible.cfg \n[defaults]\nhostfile = inventory.ini\ncat inventory.ini \n[nodes]\nnode0 ansible_user=vagrant\nnode1 ansible_user=vagrant\nnode2 ansible_user=vagrant\n</pre><p>Ansible will use these.</p><h4>Ansible Ping server</h4><div class=\"highlight highlight-source-shell\"><pre>$ ansible node0 -m ping</pre></div><p>Output</p><pre>node0 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n</pre><h4>Ansible Ping servers</h4><div class=\"highlight highlight-source-shell\"><pre>$ ansible nodes  -m ping</pre></div><p>Output</p><pre>node0 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\nnode2 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\nnode1 | SUCCESS =&gt; {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n</pre><h2>More details to follow</h2><h2>About us</h2><p><a href=\"http://cloudurable.com/\" rel=\"nofollow\">Cloudurable</a> provides AMIs, cloudformation templates and monitoring tools\nto support <a href=\"http://cloudurable.com/services/index.html\" rel=\"nofollow\">Cassandra in production running in EC2</a>.\nWe also teach advanced <a href=\"http://cloudurable.com/services/index.html\" rel=\"nofollow\">Cassandra courses which teaches how one could develop, support and deploy Cassandra to production in AWS EC2</a>.</p>"}}]}},"pageContext":{"alternative_id":9037}}