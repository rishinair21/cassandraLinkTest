{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Inserting JSON formatted values","alternative_id":12071,"content":"<p class=\"shortdesc\">Inserting JSON data with the INSERT command for testing queries.</p><section class=\"section context\"><p class=\"p\">In a production database, inserting columns and column values programmatically is\n                more practical than using cqlsh. The CQL INSERT commands supports JSON to provide a\n                manual testing from the cqlsh command line utility.</p><div class=\"p\">Use the following\n                    syntax:<pre>INSERT INTO [<var class=\"keyword varname\">keyspace_name</var>.]<var class=\"keyword varname\">table_name</var> JSON '{\"column_name\": value [,â€¦]}' [DEFAULT UNSET];</pre><p>Note: Enclose\n                    all values other than numbers in double quotes. Booleans, UUID, and other data\n                    types typically recognized in cqlsh must be in double quotes.</p></div></section><ul class=\"ul steps-unordered\" id=\"useInsertJSON__steps-unordered_qfb_nvs_sr\"><li class=\"li step stepexpand\">\n                To insert JSON data, add <code data-swiftype-name=\"codeph\" data-swiftype-type=\"text\" class=\"ph codeph\">JSON</code> to the <code data-swiftype-name=\"codeph\" data-swiftype-type=\"text\" class=\"ph codeph language-cql\">INSERT</code> command. \n                <div class=\"itemgroup stepxmp\"><pre>INSERT INTO cycling.cyclist_category JSON '{\n  \"category\" : \"GC\", \n  \"points\" : 780, \n  \"id\" : \"829aa84a-4bba-411f-a4fb-38167a987cda\",\n  \"lastname\" : \"SUTHERLAND\" }';\n  </pre></div>\n            </li><li class=\"li step stepexpand\">\n                When upserting data if any columns are missing from the JSON, the value in the\n                    missing column is overwritten with null (by default). The following removes the\n                        <code data-swiftype-name=\"codeph\" data-swiftype-type=\"text\" class=\"ph codeph\">lastname</code> value \"SUTHERLAND\" from the previous\n                    example:\n                <div class=\"itemgroup stepresult\"><pre>INSERT INTO cycling.cyclist_category JSON '{\n  \"category\" : \"Sprint\", \n  \"points\" : 780, \n  \"id\" : \"829aa84a-4bba-411f-a4fb-38167a987cda\" }';\n  </pre></div>\n            </li><li class=\"li step stepexpand\">\n                Use the DEFAULT UNSET option to only overwrite values found in the JSON\n                    string:\n                <div class=\"itemgroup stepresult\"><pre>INSERT INTO cycling.cyclist_category JSON '{\n  \"category\" : \"Sprint\", \n  \"points\" : 780, \n  \"id\" : \"829aa84a-4bba-411f-a4fb-38167a987cda\" }'\nDEFAULT UNSET;\n  </pre></div>\n            </li><li class=\"li step stepexpand\">\n                Only the PRIMARY KEY fields are required when inserting a new row, any other\n                    column not define in the JSON is set to null:\n                <div class=\"itemgroup stepxmp\"><pre>INSERT INTO cycling.cyclist_category JSON '{\n  \"category\" : \"Sprint\", \n  \"points\" : 700, \n  \"id\" : \"829aa84a-4bba-411f-a4fb-38167a987cda\"\n}';</pre></div>\n                <div class=\"itemgroup stepresult\"><img class=\"image\" id=\"useInsertJSON__image_hwc_3wc_mz\" src=\"https://docs.datastax.com/en/dse/6.0/cql/cql/images/screenshots/useInsertJSON.png\" alt=\"image\" /></div>\n            </li></ul>"}}]}},"pageContext":{"alternative_id":12071}}