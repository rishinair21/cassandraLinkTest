{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"DataStax C# Driver","alternative_id":4904,"content":"<p>A modern, <a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/\">feature-rich</a> and highly tunable C# client library for Apache Cassandra (1.2+) using exclusively Cassandra's binary protocol and Cassandra Query Language v3. <em>Use the <a href=\"https://github.com/datastax/csharp-dse-driver\">DSE C# driver</a> for better compatibility and support for DataStax Enterprise</em>.</p><p>The driver supports .NET Framework 4.5+ and .NET Core 1+.</p><h2><a href=\"https://github.com/datastax/csharp-driver#installation\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-installation\"></a>Installation</h2><p><a href=\"https://nuget.org/packages/CassandraCSharpDriver/\">Get it on Nuget</a></p><div class=\"highlight highlight-source-shell\"><pre>PM&gt; Install-Package CassandraCSharpDriver</pre></div><p><a href=\"https://travis-ci.org/datastax/csharp-driver\"><img src=\"https://camo.githubusercontent.com/65a02e83e7515dc3b1ef568bd7317d0dac6a1874/68747470733a2f2f7472617669732d63692e6f72672f64617461737461782f6373686172702d6472697665722e7376673f6272616e63683d6d6173746572\" alt=\"Build status\" data-canonical-src=\"https://travis-ci.org/datastax/csharp-driver.svg?branch=master\" /></a>\n<a href=\"https://ci.appveyor.com/project/DataStax/csharp-driver/branch/master\"><img src=\"https://camo.githubusercontent.com/5735947c513653cfe29b994bb8826e9cd99d797f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7269316f6c7638626c376237796b37792f6272616e63682f6d61737465723f7376673d74727565\" alt=\"Windows Build status\" data-canonical-src=\"https://ci.appveyor.com/api/projects/status/ri1olv8bl7b7yk7y/branch/master?svg=true\" /></a>\n<a href=\"https://www.nuget.org/packages/CassandraCSharpDriver\"><img src=\"https://camo.githubusercontent.com/5d098659e24e8ec35c2a495433a10248901d2036/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f43617373616e6472614353686172704472697665722e737667\" alt=\"Latest stable\" data-canonical-src=\"https://img.shields.io/nuget/v/CassandraCSharpDriver.svg\" /></a></p><h2><a href=\"https://github.com/datastax/csharp-driver#features\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-features\"></a>Features</h2><ul><li>Sync and <a href=\"https://github.com/datastax/csharp-driver#asynchronous-api\">Async</a> API</li>\n<li>Simple, <a href=\"https://github.com/datastax/csharp-driver#prepared-statements\">Prepared</a>, and <a href=\"https://github.com/datastax/csharp-driver#batching-statements\">Batch</a> statements</li>\n<li>Asynchronous IO, parallel execution, request pipelining</li>\n<li>Connection pooling</li>\n<li>Auto node discovery</li>\n<li>Automatic reconnection</li>\n<li>Configurable <a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/tuning-policies/\">load balancing</a> and <a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/tuning-policies/\">retry policies</a></li>\n<li>Works with any cluster size</li>\n<li><a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/components/linq/\">Linq2Cql</a> and Ado.Net support</li>\n</ul><h2><a href=\"https://github.com/datastax/csharp-driver#documentation\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-documentation\"></a>Documentation</h2><ul><li><a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/\">Documentation index</a></li>\n<li><a href=\"https://academy.datastax.com/resources/getting-started-apache-cassandra-and-c-net\">Getting started guide</a></li>\n<li><a href=\"http://docs.datastax.com/en/drivers/csharp/3.3/\">API docs</a></li>\n</ul><h2><a href=\"https://github.com/datastax/csharp-driver#getting-help\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-getting-help\"></a>Getting Help</h2><p>You can use the project <a href=\"https://groups.google.com/a/lists.datastax.com/forum/#!forum/csharp-driver-user\">Mailing list</a> or create a ticket on the <a href=\"https://datastax-oss.atlassian.net/projects/CSHARP/issues\">Jira issue tracker</a>. Additionally, you can use the <code>#datastax-drivers</code> channel in the <a href=\"https://academy.datastax.com/slack\">DataStax Academy Slack</a>.</p><h2><a href=\"https://github.com/datastax/csharp-driver#upgrading-from-previous-versions\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-upgrading-from-previous-versions\"></a>Upgrading from previous versions</h2><p>If you are upgrading to <a href=\"https://www.datastax.com/products/datastax-enterprise\">DataStax Enterprise</a>, use the <a href=\"https://github.com/datastax/csharp-dse-driver\">DSE C# driver</a> for more features and better compatibility.</p><p>If you are upgrading from the 2.1 branch of the driver, be sure to have a look at the <a href=\"https://github.com/datastax/csharp-driver/blob/master/doc/upgrade-guide-2.5.md\">upgrade guide</a>.</p><p>If you are upgrading from the 1.x branch of the driver, follow the <a href=\"https://github.com/datastax/csharp-driver/blob/master/doc/upgrade-guide-2.0.md\">upgrade guide to 2.0</a>, and then the above document.</p><h2><a href=\"https://github.com/datastax/csharp-driver#basic-usage\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-basic-usage\"></a>Basic Usage</h2><div class=\"highlight highlight-source-cs\"><pre>var cluster = Cluster.Builder()\n                     .AddContactPoints(\"host1\")\n                     .Build();\n// Connect to the nodes using a keyspace\nvar session = cluster.Connect(\"sample_keyspace\");\n// Execute a query on a connection synchronously\nvar rs = session.Execute(\"SELECT * FROM sample_table\");\n// Iterate through the RowSet\nforeach (var row in rs)\n{\n  var value = row.GetValue&lt;int&gt;(\"sample_int_column\");\n  // Do something with the value\n}</pre></div><h3><a href=\"https://github.com/datastax/csharp-driver#prepared-statements\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-prepared-statements\"></a>Prepared statements</h3><p>Prepare your query <strong>once</strong> and bind different parameters to obtain best performance.</p><div class=\"highlight highlight-source-cs\"><pre>// Prepare a statement once\nvar ps = session.Prepare(\"UPDATE user_profiles SET birth=? WHERE key=?\");\n// ...bind different parameters every time you need to execute\nvar statement = ps.Bind(new DateTime(1942, 11, 27), \"hendrix\");\n// Execute the bound statement with the provided parameters\nsession.Execute(statement);</pre></div><h3><a href=\"https://github.com/datastax/csharp-driver#batching-statements\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-batching-statements\"></a>Batching statements</h3><p>You can execute multiple statements (prepared or unprepared) in a batch to update/insert several rows atomically even in different column families.</p><div class=\"highlight highlight-source-cs\"><pre>// Prepare the statements involved in a profile update once\nvar profileStmt = session.Prepare(\"UPDATE user_profiles SET email=? WHERE key=?\");\nvar userTrackStmt = session.Prepare(\"INSERT INTO user_track (key, text, date) VALUES (?, ?, ?)\");\n// ...you should reuse the prepared statement\n// Bind the parameters and add the statement to the batch batch\nvar batch = new BatchStatement()\n  .Add(profileStmt.Bind(emailAddress, \"hendrix\"))\n  .Add(userTrackStmt.Bind(\"hendrix\", \"You changed your email\", DateTime.Now));\n// Execute the batch\nsession.Execute(batch);</pre></div><h3><a href=\"https://github.com/datastax/csharp-driver#asynchronous-api\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-asynchronous-api\"></a>Asynchronous API</h3><p>Session allows asynchronous execution of statements (for any type of statement: simple, bound or batch) by exposing the <code>ExecuteAsync</code> method.</p><div class=\"highlight highlight-source-cs\"><pre>// Execute a statement asynchronously using await\nvar rs = await session.ExecuteAsync(statement);</pre></div><h3><a href=\"https://github.com/datastax/csharp-driver#avoid-boilerplate-mapping-code\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-avoid-boilerplate-mapping-code\"></a>Avoid boilerplate mapping code</h3><p>The driver features a built-in <a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/components/mapper/\">Mapper</a> and <a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/components/linq/\">Linq</a> components that can use to avoid boilerplate mapping code between cql rows and your application entities.</p><div class=\"highlight highlight-source-cs\"><pre>User user = mapper.Single&lt;User&gt;(\"SELECT name, email FROM users WHERE id = ?\", userId);</pre></div><p>See the <a href=\"http://docs.datastax.com/en/developer/csharp-driver/latest/features/components/\">driver components documentation</a> for more information.</p><h3><a href=\"https://github.com/datastax/csharp-driver#automatic-pagination-of-results\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-automatic-pagination-of-results\"></a>Automatic pagination of results</h3><p>You can iterate indefinitely over the <code>RowSet</code>, having the rows fetched block by block until the rows available on the client side are exhausted.</p><div class=\"highlight highlight-source-cs\"><pre>var statement = new SimpleStatement(\"SELECT * from large_table\");\n// Set the page size, in this case the RowSet will not contain more than 1000 at any time\nstatement.SetPageSize(1000);\nvar rs = session.Execute(statement);\nforeach (var row in rs)\n{\n  // The enumerator will yield all the rows from Cassandra\n  // Retrieving them in the back in blocks of 1000.\n}</pre></div><h3><a href=\"https://github.com/datastax/csharp-driver#user-defined-types-mapping\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-user-defined-types-mapping\"></a>User defined types mapping</h3><p>You can map your <a href=\"http://docs.datastax.com/en/cql/3.1/cql/cql_reference/cqlRefUDType.html\">Cassandra User Defined Types</a> to your application entities.</p><p>For a given udt</p><div class=\"highlight highlight-source-sql\"><pre>CREATE TYPE address (\n  street text,\n  city text,\n  zip_code int,\n  phones set&lt;text&gt;\n);</pre></div><p>For a given class</p><div class=\"highlight highlight-source-cs\"><pre>public class Address\n{\n  public string Street { get; set; }\n  public string City { get; set; }\n  public int ZipCode { get; set; }\n  public IEnumerable&lt;string&gt; Phones { get; set;}\n}</pre></div><p>You can either map the properties by name</p><div class=\"highlight highlight-source-cs\"><pre>//Map the properties by name automatically\nsession.UserDefinedTypes.Define(\n  UdtMap.For&lt;Address&gt;()\n);</pre></div><p>Or you can define the properties manually</p><div class=\"highlight highlight-source-cs\"><pre>session.UserDefinedTypes.Define(\n  UdtMap.For&lt;Address&gt;()\n    .Map(a =&gt; a.Street, \"street\")\n    .Map(a =&gt; a.City, \"city\")\n    .Map(a =&gt; a.ZipCode, \"zip_code\")\n    .Map(a =&gt; a.Phones, \"phones\")\n);</pre></div><p>You should <strong>map your <a href=\"http://docs.datastax.com/en/cql/3.1/cql/cql_reference/cqlRefUDType.html\">UDT</a> to your entity once</strong> and you will be able to use that mapping during all your application lifetime.</p><div class=\"highlight highlight-source-cs\"><pre>var rs = session.Execute(\"SELECT id, name, address FROM users where id = x\");\nvar row = rs.First();\n// You can retrieve the field as a value of type Address\nvar userAddress = row.GetValue&lt;Address&gt;(\"address\");\nConsole.WriteLine(\"user lives on {0} Street\", userAddress.Street);</pre></div><h3><a href=\"https://github.com/datastax/csharp-driver#setting-cluster-and-statement-execution-options\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-setting-cluster-and-statement-execution-options\"></a>Setting cluster and statement execution options</h3><p>You can set the options on how the driver connects to the nodes and the execution options.</p><div class=\"highlight highlight-source-cs\"><pre>// Example at cluster level\nvar cluster = Cluster\n  .Builder()\n  .AddContactPoints(hosts)\n  .WithCompression(CompressionType.LZ4)\n  .WithLoadBalancingPolicy(new DCAwareRoundRobinPolicy(\"west\"));\n// Example at statement (simple, bound, batch) level\nvar statement = new SimpleStatement(query)\n  .SetConsistencyLevel(ConsistencyLevel.Quorum)\n  .SetRetryPolicy(DowngradingConsistencyRetryPolicy.Instance)\n  .SetPageSize(1000);</pre></div><h2><a href=\"https://github.com/datastax/csharp-driver#compatibility\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-compatibility\"></a>Compatibility</h2><ul><li>Apache Cassandra versions 2.0 and above.</li>\n<li>DataStax Enterprise versions 4.5 and above.</li>\n<li>.NET Framework versions 4.5 and above and .NET Core versions 1.0 and above.</li>\n</ul><p>Note: DataStax products do not support big-endian systems.</p><h2><a href=\"https://github.com/datastax/csharp-driver#feedback-requested\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-feedback-requested\"></a>Feedback Requested</h2><p><strong>Help us focus our efforts!</strong> Provide your input on the <a href=\"http://goo.gl/forms/3BxcP8nKs6\">Platform and Runtime Survey</a> (we kept it short).</p><h2><a href=\"https://github.com/datastax/csharp-driver#building-and-running-the-tests\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-building-and-running-the-tests\"></a>Building and running the tests</h2><p>You can use Visual Studio or msbuild to build the solution.</p><p><a href=\"https://github.com/datastax/csharp-driver/wiki/Building-and-running-tests\">Check the documentation for building the driver from source and running the tests</a>.</p><h2><a href=\"https://github.com/datastax/csharp-driver#license\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-license\"></a>License</h2><p>Copyright 2012-2017, DataStax.</p><p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p><p><a href=\"http://www.apache.org/licenses/LICENSE-2.0\">http://www.apache.org/licenses/LICENSE-2.0</a></p><p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>"}}]}},"pageContext":{"alternative_id":4904}}