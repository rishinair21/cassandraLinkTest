{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"michaelklishin/cassandra-chef-cookbook","alternative_id":12454,"content":"<article class=\"markdown-body entry-content\" itemprop=\"text\">\n<p><a href=\"https://travis-ci.org/michaelklishin/cassandra-chef-cookbook\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/87f09f29326d3a637955a80bb59facec7a233fae/68747470733a2f2f7472617669732d63692e6f72672f6d69636861656c6b6c697368696e2f63617373616e6472612d636865662d636f6f6b626f6f6b2e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/michaelklishin/cassandra-chef-cookbook.svg?branch=master\" /></a></p>\n<p>This is a Chef cookbook for Apache Cassandra (<a href=\"http://www.datastax.com/products/community\" rel=\"nofollow\">DataStax\nCommunity Edition</a>) as\nwell as DataStax Enterprise.</p>\n<p>It uses officially released packages and provides an Upstart service\nscript. It has fairly complete support for adjustment of Cassandra\nconfiguration parameters using Chef node attributes.</p>\n<p>It was originally created for CI and development environments and now supports cluster discovery using Chef search. <strong>Feel free to contribute</strong> what you find missing!</p>\n<h2><a id=\"user-content-supported-chef-versions\" class=\"anchor\" aria-hidden=\"true\" href=\"#supported-chef-versions\"></a>Supported Chef Versions</h2>\n<p>This cookbook targets Chef 12 and later versions.</p>\n<h2><a id=\"user-content-cookbook-dependencies\" class=\"anchor\" aria-hidden=\"true\" href=\"#cookbook-dependencies\"></a>Cookbook Dependencies</h2>\n<div class=\"highlight highlight-source-ruby\"><pre>depends 'java'\ndepends 'ulimit'\ndepends 'apt'\ndepends 'yum'\ndepends 'ark'</pre></div>\n<h2><a id=\"user-content-cassandra-dependencies\" class=\"anchor\" aria-hidden=\"true\" href=\"#cassandra-dependencies\"></a>Cassandra Dependencies</h2>\n<p>Modern Cassandra versions require OracleJDK 8.</p>\n<h2><a id=\"user-content-berkshelf\" class=\"anchor\" aria-hidden=\"true\" href=\"#berkshelf\"></a>Berkshelf</h2>\n<h3><a id=\"user-content-most-recent-release\" class=\"anchor\" aria-hidden=\"true\" href=\"#most-recent-release\"></a>Most Recent Release</h3>\n<div class=\"highlight highlight-source-ruby\"><pre>cookbook 'cassandra-dse', '~&gt; 4.5.0'</pre></div>\n<h3><a id=\"user-content-from-git\" class=\"anchor\" aria-hidden=\"true\" href=\"#from-git\"></a>From Git</h3>\n<div class=\"highlight highlight-source-ruby\"><pre>cookbook 'cassandra-dse', github: 'michaelklishin/cassandra-chef-cookbook'</pre></div>\n<h2><a id=\"user-content-supported-apache-cassandra-version\" class=\"anchor\" aria-hidden=\"true\" href=\"#supported-apache-cassandra-version\"></a>Supported Apache Cassandra Version</h2>\n<p>This cookbook currently provides</p>\n<ul><li>Cassandra via tarballs</li>\n<li>Cassandra (DataStax Community Edition) via apt and yum packages</li>\n<li>DataStax Enterprise (DSE) via packages</li>\n</ul><h2><a id=\"user-content-supported-os-distributions\" class=\"anchor\" aria-hidden=\"true\" href=\"#supported-os-distributions\"></a>Supported OS Distributions</h2>\n<ul><li>Ubuntu 12.04 through 17.101 via DataStax apt repo.</li>\n<li>RHEL/CentOS via DataStax yum repo.</li>\n<li>RHEL/CentOS/Amazon via tarball</li>\n</ul><h2><a id=\"user-content-support-jdk-versions\" class=\"anchor\" aria-hidden=\"true\" href=\"#support-jdk-versions\"></a>Support JDK Versions</h2>\n<p>Cassandra 2.x requires JDK 7+, later versions require Oracle JDK 8+.</p>\n<h2><a id=\"user-content-recipes\" class=\"anchor\" aria-hidden=\"true\" href=\"#recipes\"></a>Recipes</h2>\n<p>The main recipe is <code>cassandra-dse::default</code> which together with the <code>node[:cassandra][:install_method]</code> attribute will be responsible for including the proper installation recipe and recipe <code>cassandra-dse::config</code> for configuring both <code>datastax</code> and <code>tarball</code> C* installation.</p>\n<p>Two actual installation recipes are <code>cassandra-dse::tarball</code> and <code>cassandra-dse::datastax</code>. The former uses official tarball\nand thus can be used to provision any specific version.</p>\n<p>The latter uses DataStax repository via packages. You can install different versions (ex. <code>dsc20</code> for v2.0) available in the repository by altering <code>:package_name</code> attribute (<code>dsc20</code> by default).</p>\n<p>Recently we have moved all the configuration resources to a separate recipe <code>cassandra-des::config</code>, which means recipes <code>cassandra-dse::tarball</code> and <code>cassandra-dse::datastax</code> are only responsible for C* installation.</p>\n<blockquote>\n<blockquote>\n<p>Users with cookbook version <code>=&lt;3.5.0</code> needs to update the <code>run_list</code>, in case of not using <code>cassandra-dse::default</code> recipe.</p>\n</blockquote>\n</blockquote>\n<p>include_recipe <code>cassandra-dse</code> uses <code>cassandra-dse::datastax</code> as the default.</p>\n<h3><a id=\"user-content-datastax-enterprise\" class=\"anchor\" aria-hidden=\"true\" href=\"#datastax-enterprise\"></a>DataStax Enterprise</h3>\n<p>You can also install the DataStax Enterprise edition by adding <code>node[:cassandra][:dse]</code> attributes according to the datastax.rb.</p>\n<ul><li><code>node[:cassandra][:package_name]</code>: Override default value to 'dse-full'.</li>\n<li><code>node[:cassandra][:service_name]</code>: Override default value to 'dse'.</li>\n</ul><p>Unencrypted Credentials:</p>\n<ul><li><code>node[:cassandra][:dse][:credentials][:username]</code>: Your username from Datastax website.</li>\n<li><code>node[:cassandra][:dse][:credentials][:password]</code>: Your password from Datastax website.</li>\n</ul><p>Encrypted Credentials:</p>\n<ul><li><code>node[:cassandra][:dse][:credentials][:databag][:name]</code>: Databag name, i.e. the value 'cassandra' will reference to <code>/data_bags/cassandra</code>.</li>\n<li><code>node[:cassandra][:dse][:credentials][:databag][:item]</code>: Databag item, i.e. the value 'main' will reference to <code>/data_bags/cassandra/main.json</code>.</li>\n<li><code>node[:cassandra][:dse][:credentials][:databag][:entry]</code>: The field name in the databag item, in which the credetials are written. i.e. the data_bag:</li>\n</ul><pre>{\n  \"id\": \"main\",\n  \"entry\": {\n    \"username\": \"%USERNAME%\",\n    \"password\": \"%PASSWORD%\"\n  }\n}\n</pre>\n<p>There are also recipes for DataStax opscenter installation (\n<code>cassandra-dse::opscenter_agent_tarball</code>,\n<code>cassandra-dse::opscenter_agent_datastax</code>, and\n<code>cassandra-dse::opscenter_server</code> ) along with attributes available\nfor override (see below).</p>\n<h3><a id=\"user-content-jna-support-for-c-versions-prior-to-210\" class=\"anchor\" aria-hidden=\"true\" href=\"#jna-support-for-c-versions-prior-to-210\"></a>JNA Support (for C* Versions Prior to 2.1.0)</h3>\n<p>The <code>node[:cassandra][:setup_jna]</code> attribute will install the jna.jar in the\n<code>/usr/share/java/jna.jar</code>, and create a symbolic link to it on\n<code>#{cassandra.lib\\_dir}/jna.jar</code>, according to the <a href=\"http://www.datastax.com/documentation/cassandra/1.2/webhelp/cassandra/install/installJnaDeb.html\" rel=\"nofollow\">DataStax\ndocumentation</a>.</p>\n<h2><a id=\"user-content-node-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#node-attributes\"></a>Node Attributes</h2>\n<p>Please note that the maintainers try to keep the list below up-to-date but it fairly often misses\nsome recently added attributes. Please refer to the <a href=\"https://github.com/michaelklishin/cassandra-chef-cookbook/tree/master/attributes\">attributes files</a> if an attribute you are looking for isn't listed.</p>\n<h3><a id=\"user-content-core-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#core-attributes\"></a>Core Attributes</h3>\n<ul><li><code>node[:cassandra][:install_method]</code> (default: datastax): The installation method to use (either 'datastax' or 'tarball').</li>\n<li><code>node[:cassandra][:config][:cluster_name]</code> (default: none): Name of the cluster to create. This is required.</li>\n<li><code>node[:cassandra][:version]</code> (default: a recent patch version): version to provision</li>\n<li><code>node[:cassandra][:tarball][:url]</code> and <code>node[:cassandra][:tarball][:sha256sum]</code> specify tarball URL and SHA256 check sum used by the <code>cassandra::tarball</code> recipe.</li>\n<li>Setting <code>node[:cassandra][:tarball][:url]</code> to \"auto\" (default) will download the tarball of the specified version from the Apache repository.</li>\n<li><code>node[:cassandra][:setup_user]</code> (default: true): create user/group for Cassandra node process</li>\n<li><code>node[:cassandra][:setup_user_limits]</code> (default: true): setup Cassandra user limits</li>\n<li><code>node[:cassandra][:user]</code>: username Cassandra node process will use</li>\n<li><code>node[:cassandra][:group]</code>: groupname Cassandra node process will use</li>\n<li><code>node[:cassandra][:heap_new_size]</code> set JVM <code>-Xmn</code>. If set, <code>node[:cassandra][:max_heap_size]</code> must also be set; if nil, defaults to <code>min(100MB * num_cores, 1/4 * heap size)</code></li>\n<li><code>node[:cassandra][:max_heap_size]</code> set JVM <code>-Xms</code> and <code>-Xmx</code>. If set, <code>node[:cassandra][:heap_new_size]</code> must also be set; if nil, defaults to <code>max(min(1/2 ram, 1024MB), min(1/4 ram, 8GB))</code></li>\n<li><code>node[:cassandra][:installation_dir]</code> (default: <code>/usr/local/cassandra</code>): installation directory</li>\n<li><code>node[:cassandra][:root_dir]</code> (default: <code>/var/lib/cassandra</code>): data directory root</li>\n<li><code>node[:cassandra][:log_dir]</code> (default: <code>/var/log/cassandra</code>): log directory</li>\n<li><code>node[:cassandra][:tmp_dir]</code> (default: none): tmp directory. Be careful what you set this to, as the cassandra user will be given ownership of that directory.</li>\n<li><code>node[:cassandra][:local_jmx]</code> (default: true): bind JMX listener to localhost</li>\n<li><code>node[:cassandra][:jmx_port]</code> (default: 7199): port to listen for JMX</li>\n<li><code>node[:cassandra][:jmx_remote_rmi_port]</code> (default: $JMX_PORT): port for jmx remote method invocation. If using internode SSL, there is a bug requiring this to be different than <code>node[:cassandra][:jmx_port]</code></li>\n<li><code>node[:cassandra][:jmx_remote_authenticate]</code> (default: false): turn on to require username/password for jmx operations including nodetool. To turn on requires <code>node[:cassandra][:local_jmx]</code> to be false</li>\n<li><code>node[:cassandra][:jmx][:user]</code> (default: cassandra): username for jmx authentication</li>\n<li><code>node[:cassandra][:jmx][:password]</code> (default: cassandra): password for jmx authentication.</li>\n<li><code>node[:cassandra][:notify_restart]</code> (default: false): notify Cassandra service restart upon resource update</li>\n<li>Setting <code>node[:cassandra][:notify_restart]</code> to true will restart Cassandra service upon resource change</li>\n<li><code>node[:cassandra][:setup_jna]</code> (default: true): installs jna.jar</li>\n<li><code>node[:cassandra][:skip_jna]</code> (default: false): (2.1.0 and up only) removes jna.jar, adding '-Dcassandra.boot_without_jna=true' for low-memory C* installations</li>\n<li><code>node[:cassandra][:pid_dir]</code> (default: true): pid directory for Cassandra node process for <code>cassandra::tarball</code> recipe</li>\n<li><code>node[:cassandra][:dir_mode]</code> (default: 0755): default permission set for Cassandra node directory / files</li>\n<li><code>node[:cassandra][:service_action]</code> (default: [:enable, :start]): default service actions for the service</li>\n<li><code>node[:cassandra][:install_java]</code> (default: true): whether to run the open source java cookbook</li>\n<li><code>node[:cassandra][:cassandra_old_version_20]</code> (default: ): attribute used in cookbook to determine C* version older or newer than 2.1</li>\n<li><code>node[:cassandra][:log_config_files]</code> (default: calculated): log framework configuration files name array</li>\n<li><code>node[:cassandra][:xss]</code>  JVM per thread stack-size (-Xss option) (default: 256k).</li>\n<li><code>node[:cassandra][:jmx_server_hostname]</code> java.rmi.server.hostname option for JMX interface, necessary to set when you have problems connecting to JMX) (default: false)</li>\n<li><code>node[:cassandra][:heap_dump]</code> -XX:+HeapDumpOnOutOfMemoryError JVM parameter (default: true)</li>\n<li><code>node[:cassandra][:heap_dump_dir]</code> Directory where heap dumps will be placed (default: nil, which will use cwd)</li>\n<li><code>node[:cassandra][:vnodes]</code> enable vnodes. (default: true)</li>\n</ul><p>For the complete set of supported attributes, please consult <a href=\"https://github.com/michaelklishin/cassandra-chef-cookbook/tree/master/attributes\">the source</a>.</p>\n<p>Attributes used to define JBOD functionality</p>\n<ul><li><code>default['cassandra']['jbod']['slices']</code> - defines the number of jbod slices while each represents data directory. By default disables with nil.</li>\n<li><code>default['cassandra']['jbod']['dir_name_prefix']</code> - defines the data directory prefix\nFor example if you want to connect 4 EBS disks as a JBOD slices the names will be in the following format: data1,data2,data3,data4\ncassandra.yaml.erb will generate automatically entry per data_dir location\nPlease note: this functionality is not creating volumes or directories. It takes care of configuration. You can use same parameters with AWS cookbook to create EBS volumes and map to directories.</li>\n</ul><p>Attributes for fine tuning CMS/ParNew, the GC algorithm recommended for Cassandra deployments:</p>\n<ul><li><code>node[:cassandra][:gc_survivor_ratio]</code> -XX:SurvivorRatio JVM parameter (default: 8)</li>\n<li><code>node[:cassandra][:gc_max_tenuring_threshold]</code> -XX:MaxTenuringThreshold JVM parameter (default: 1)</li>\n<li><code>node[:cassandra][:gc_cms_initiating_occupancy_fraction]</code> -XX:CMSInitiatingOccupancyFraction JVM parameter (default: 75)</li>\n</ul><p>Descriptions for these JVM parameters can be found <a href=\"http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html#PerformanceTuning\" rel=\"nofollow\">here</a> and <a href=\"http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html#cms.starting_a_cycle\" rel=\"nofollow\">here</a>.</p>\n<p>Attributes for enabling G1 GC.</p>\n<ul><li><code>node[:cassandra][:jvm][:g1]</code> (default: false)</li>\n</ul><p>Attributes for enabling GC detail/logging.</p>\n<ul><li><code>node[:cassandra][:jvm][:gcdetail]</code> (default: false)</li>\n</ul><p>Attributes for fine tuning the G1 GC algorithm:</p>\n<ul><li><code>node[:cassandra][:jvm][:g1_rset_updating_pause_time_percent]</code> (default: 10)</li>\n<li><code>node[:cassandra][:jvm][:g1_heap_region_size]</code> -XX:G1HeapRegionSize (default: 0)</li>\n<li><code>node[:cassandra][:jvm][:max_gc_pause_millis]</code> -XX:MaxGCPauseMillis (default: 200)</li>\n<li><code>node[:cassandra][:jvm][:heap_occupancy_threshold]</code> -XX:InitiatingHeapOccupancyPercent (default: 45)</li>\n<li><code>node[:cassandra][:jvm][:max_parallel_gc_threads]</code> This will set -XX:ParallelGCThreads to the number of cores on the machine (default: false)</li>\n<li><code>node[:cassandra][:jvm][:max_conc_gc_threads]</code> This will set -XX:ConcGCThreads to the number of cores on the machine (default: false)</li>\n<li><code>node[:cassandra][:jvm][:parallel_ref_proc]</code> -XX:ParallelRefProcEnabled (default: false)</li>\n<li><code>node[:cassandra][:jvm][:always_pre_touch]</code> -XX:AlwaysPreTouch (default: false)</li>\n<li><code>node[:cassandra][:jvm][:use_biased_locking]</code> -XX:UseBiasedLocking  (default: true)</li>\n<li><code>node[:cassandra][:jvm][:use_tlab]</code> -XX:UseTLAB (default: true)</li>\n<li><code>node[:cassandra][:jvm][:resize_tlab]</code> -XX:ResizeTLAB (default: true)</li>\n</ul><p>Oracle JVM 8 tuning parameters: <a href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/\" rel=\"nofollow\">here</a></p>\n<h3><a id=\"user-content-seed-discovery-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#seed-discovery-attributes\"></a>Seed Discovery Attributes</h3>\n<ul><li><code>node[:cassandra][:seeds]</code> (default: <code>[node[:ipaddress]]</code>): an array of nodes this node will contact to discover cluster topology</li>\n<li><code>node[:cassandra][:seed_discovery][:use_chef_search]</code> (default: false): enabled seed discovery using Chef search</li>\n<li><code>node[:cassandra][:seed_discovery][:search_role]</code> (default: <code>\"cassandra-seed\"</code>): role to use in search query</li>\n<li><code>node[:cassandra][:seed_discovery][:search_query]</code> (default: uses <code>node[:cassandra][:seed_discovery][:search_role]</code>): allows\nfor overriding the entire Chef search query</li>\n<li><code>node[:cassandra][:seed_discovery][:count]</code> (default: <code>3</code>): how many nodes to include into seed list. First N nodes are\ntaken in the order Chef search returns them. IP addresses of the nodes are sorted lexographically.</li>\n</ul><h3><a id=\"user-content-cassandrayaml-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#cassandrayaml-attributes\"></a>cassandra.yaml Attributes</h3>\n<ul><li><code>node[:cassandra][:config][:num_tokens]</code> set the desired number of tokens. (default: 256)</li>\n<li><code>node[:cassandra][:config][:listen_address]</code> (default: node[:ipaddress]): address clients will use to connect to the node</li>\n<li><code>node[:cassandra][:config][:broadcast_address]</code> (default: node IP address): address to broadcast to other Cassandra nodes</li>\n<li><code>node[:cassandra][:config][:rpc_address]</code> (default: 0.0.0.0): address to bind the RPC interface.  Leave blank to lookup IP from hostname.</li>\n<li><code>node[:cassandra][:config][:hinted_handoff_enabled]</code> see <a href=\"http://wiki.apache.org/cassandra/HintedHandoff\" rel=\"nofollow\">http://wiki.apache.org/cassandra/HintedHandoff</a> (default: true)</li>\n<li><code>node[:cassandra][:config][:max_hint_window_in_ms]</code> The maximum amount of time a dead host will have hints generated (default: 10800000).</li>\n<li><code>node[:cassandra][:config][:hinted_handoff_throttle_in_kb]</code> throttle in KB's per second, per delivery thread (default: 1024)</li>\n<li><code>node[:cassandra][:config][:max_hints_delivery_threads]</code> Number of threads with which to deliver hints (default: 2)</li>\n<li><code>node[:cassandra][:config][:authenticator]</code> Authentication backend (default: org.apache.cassandra.auth.AllowAllAuthenticator)</li>\n<li><code>node[:cassandra][:config][:authorizer]</code> Authorization backend (default: org.apache.cassandra.auth.AllowAllAuthorizer)</li>\n<li><code>node[:cassandra][:config][:permissions_validity_in_ms]</code> Validity period for permissions cache, set to0 to disable (default: 2000)</li>\n<li><code>node[:cassandra][:config][:partitioner]</code> The partitioner to distribute keys across the cluster (default: org.apache.cassandra.dht.Murmur3Partitioner).</li>\n<li><code>node[:cassandra][:config][:disk_failure_policy]</code> policy for data disk failures: stop, best_effort, or ignore (default: stop)</li>\n<li><code>node[:cassandra][:config][:key_cache_size_in_mb]</code> Maximum size of the key cache in memory. Set to 0 to disable, or \"\" for auto = (min(5% of Heap (in MB), 100MB)) (default: \"\", auto).</li>\n<li><code>node[:cassandra][:config][:key_cache_save_period]</code> Duration in seconds after which key cache is saved to saved_caches_directory. (default: 14400)</li>\n<li><code>node[:cassandra][:config][:row_cache_size_in_mb]</code> Maximum size of the row cache in memory, 0 to disable (default: 0)</li>\n<li><code>node[:cassandra][:config][:row_cache_save_period]</code> Duration in seconds after which row cache is saved to saved_caches_directory, 0 to disable cache save. (default: 0)</li>\n<li><code>node[:cassandra][:config][:row_cache_provider]</code> The provider for the row cache to use (default: SerializingCacheProvider)</li>\n<li><code>node[:cassandra][:config][:commitlog_sync]</code> periodic to ack writes immediately with periodic fsyncs, or batch to wait until fsync to ack writes (default: periodic)</li>\n<li><code>node[:cassandra][:config][:commitlog_sync_period_in_ms]</code> period for commitlog fsync when commitlog_sync = periodic (default: 10000)</li>\n<li><code>node[:cassandra][:config][:commitlog_sync_batch_window_in_ms]</code> batch window for fsync when commitlog_sync = batch (default: 50)</li>\n<li><code>node[:cassandra][:config][:commitlog_segment_size_in_mb]</code> Size of individual commitlog file segments (default: 32)</li>\n<li><code>node[:cassandra][:config][:commitlog_total_space_in_mb]</code> If space gets above this value (it will round up to the next nearest segment multiple), Cassandra will flush every dirty CF in the oldest segment and remove it. (default: 4096)</li>\n<li><code>node[:cassandra][:config][:concurrent_reads]</code> Should be set to 16 * drives (default: 32)</li>\n<li><code>node[:cassandra][:config][:concurrent_writes]</code> Should be set to 8 * cpu cores (default: 32)</li>\n<li><code>node[:cassandra][:config][:trickle_fsync]</code> Enable this to avoid sudden dirty buffer flushing from impacting read latencies.  Almost always a good idea on SSDs; not necessary on platters (default: false)</li>\n<li><code>node[:cassandra][:config][:trickle_fsync_interval_in_kb]</code> Interval for fsync when doing sequential writes (default: 10240)</li>\n<li><code>node[:cassandra][:config][:storage_port]</code> TCP port, for commands and data (default: 7000)</li>\n<li><code>node[:cassandra][:config][:ssl_storage_port]</code> SSL port, unused unless enabled in encryption options (default: 7001)</li>\n<li><code>node[:cassandra][:config][:listen_address]</code> Address to bind for communication with other nodes. Leave blank to lookup IP from hostname. 0.0.0.0 is always wrong. (default: node[:ipaddress]).</li>\n<li><code>node[:cassandra][:config][:broadcast_address]</code> Address to broadcast to other Cassandra nodes.  If '', will use listen_address (default: '')</li>\n<li><code>node[:cassandra][:config][:start_native_transport]</code> Whether to start the native transport server (default: true)</li>\n<li><code>node[:cassandra][:config][:native_transport_port]</code> Port for the CQL native transport to listen for clients on (default: 9042)</li>\n<li><code>node[:cassandra][:config][:start_rpc]</code> Whether to start the Thrift RPC server (default: true)</li>\n<li><code>node[:cassandra][:config][:rpc_port]</code> Port for Thrift RPC server to listen for clients on (default: 9160)</li>\n<li><code>node[:cassandra][:config][:rpc_keepalive]</code> Enable keepalive on RPC connections (default: true)</li>\n<li><code>node[:cassandra][:config][:rpc_server_type]</code> sync for one thread per connection; hsha for \"half synchronous, half asynchronous\" (default: sync)</li>\n<li><code>node[:cassandra][:config][:thrift_framed_transport_size_in_mb]</code> Frame size for Thrift (maximum field length) (default: 15)</li>\n<li><code>node[:cassandra][:config][:thrift_max_message_length_in_mb]</code> Max length of a Thrift message, including all fields and internal Thrift overhead (default: 16)</li>\n<li><code>node[:cassandra][:config][:incremental_backups]</code> Enable hardlinks in backups/ for each sstable flushed or streamed locally. Removing these links is the operator's responsibility (default: false)</li>\n<li><code>node[:cassandra][:config][:snapshot_before_compaction]</code> Take a snapshot before each compaction (default: false)</li>\n<li><code>node[:cassandra][:config][:auto_snapshot]</code> Take a snapshot before keyspace truncation or dropping of column families.  If you set this value to false, you will lose data on truncation or drop (default: true)</li>\n<li><code>node[:cassandra][:config][:column_index_size_in_kb]</code> Add column indexes to a row after its contents reach this size (default: 64)</li>\n<li><code>node[:cassandra][:config][:compaction_throughput_mb_per_sec]</code> Throttle compaction to this total system throughput. Generally should be 16-32 times data insertion rate (default: 16)</li>\n<li><code>node[:cassandra][:config][:read_request_timeout_in_ms]</code> How long the coordinator should wait for read operations to complete (default: 10000)</li>\n<li><code>node[:cassandra][:config][:range_request_timeout_in_ms]</code> How long the coordinator should wait for seq or index scans to complete (default: 10000).</li>\n<li><code>node[:cassandra][:config][:write_request_timeout_in_ms]</code> How long the coordinator should wait for writes to complete (default: 10000)</li>\n<li><code>node[:cassandra][:config][:truncate_request_timeout_in_ms]</code> How long the coordinator should wait for truncates to complete (default: 60000)</li>\n<li><code>node[:cassandra][:config][:request_timeout_in_ms]</code> Default timeout for other, miscellaneous operations (default: 10000)</li>\n<li><code>node[:cassandra][:config][:cross_node_timeout]</code> Enable operation timeout information exchange between nodes to accurately measure request timeouts. Be sure ntp is installed and node times are synchronized before enabling. (default: false)</li>\n<li><code>node[:cassandra][:config][:streaming_socket_timeout_in_ms]</code> Enable socket timeout for streaming operation (default: 3600000 - 1 hour)</li>\n<li><code>node[:cassandra][:config][:phi_convict_threshold]</code> Adjusts the sensitivity of the failure detector on an exponential scale (default: 8)</li>\n<li><code>node[:cassandra][:config][:endpoint_snitch]</code> SimpleSnitch, PropertyFileSnitch, GossipingPropertyFileSnitch, RackInferringSnitch, Ec2Snitch, Ec2MultiRegionSnitch (default: SimpleSnitch)</li>\n<li><code>node[:cassandra][:config][:dynamic_snitch_update_interval_in_ms]</code> How often to perform the more expensive part of host score calculation (default: 100)</li>\n<li><code>node[:cassandra][:config][:dynamic_snitch_reset_interval_in_ms]</code> How often to reset all host scores, allowing a bad host to possibly recover (default: 600000)</li>\n<li><code>node[:cassandra][:config][:dynamic_snitch_badness_threshold]</code> Allow 'pinning' of replicas to hosts in order to increase cache capacity. (default: 0.1)</li>\n<li><code>node[:cassandra][:config][:request_scheduler]</code> Class to schedule incoming client requests (default: org.apache.cassandra.scheduler.NoScheduler)</li>\n<li><code>node[:cassandra][:config][:index_interval]</code> index_interval controls the sampling of entries from the primary row index in terms of space versus time (default: 128).</li>\n<li><code>node[:cassandra][:config][:auto_bootstrap]</code> Setting this parameter to false prevents the new nodes from attempting to get all the data from the other nodes in the data center. (default: true).</li>\n<li><code>node[:cassandra][:config][:enable_assertions]</code> Enable JVM assertions.  Disabling this in production will give a modest performance benefit (around 5%) (default: true).</li>\n<li><code>node[:cassandra][:config][:data_file_directories]</code> (default: node['cassandra']['data_dir']): C* data cirectories</li>\n<li><code>node[:cassandra][:config][:saved_caches_directory]</code> (default: saved_caches_directory): C* saved cache directory</li>\n<li><code>node[:cassandra][:config][:commitlog_directory]</code> (default: node['cassandra']['commitlog_dir']) *C commit log directory</li>\n</ul><h4><a id=\"user-content-c-v20-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#c-v20-attributes\"></a>C* &lt;v2.0 Attributes</h4>\n<ul><li><code>node[:cassandra][:config][:memtable_flush_queue_size]</code> Number of full memtables to allow pending flush, i.e., waiting for a writer thread (default: 4)</li>\n<li><code>node[:cassandra][:config][:in_memory_compaction_limit_in_mb]</code> Size limit for rows being compacted in memory (default: 64)</li>\n<li><code>node[:cassandra][:config][:concurrent_compactors]</code> Sets the number of concurrent compaction processes allowed to run simultaneously on a node. (default: nil, which will result in one compaction process per CPU core)</li>\n<li><code>node[:cassandra][:config][:multithreaded_compaction]</code> Enable multithreaded compaction. Uses one thread per core, plus one thread per sstable being merged. (default: false)</li>\n<li><code>node[:cassandra][:config][:compaction_preheat_key_cache]</code> Track cached row keys during compaction and re-cache their new positions in the compacted sstable. Disable if you use really large key caches (default: true)</li>\n<li><code>node[:cassandra][:config][:native_transport_min_threads]</code> Min number of threads for handling transport requests when the native protocol is used (default: nil)</li>\n<li><code>node[:cassandra][:config][:native_transport_max_threads]</code> Max number of threads for handling transport requests when the native protocol is used (default: nil)</li>\n</ul><h4><a id=\"user-content-c-v21-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#c-v21-attributes\"></a>C* &gt;v2.1 Attributes</h4>\n<ul><li><code>node[:cassandra][:config][:broadcast_rpc_address]</code> RPC address to broadcast to drivers and other Cassandra nodes (default: node[:ipaddress])</li>\n<li><code>node[:cassandra][:config][:tombstone_failure_threshold]</code> tombstone attribute, check C* documentation for more info (default: 100000)</li>\n<li><code>node[:cassandra][:config][:tombstone_warn_threshold]</code> tombstone attribute, check C* documentation for more info (default: 1000)</li>\n<li><code>node[:cassandra][:config][:sstable_preemptive_open_interval_in_mb]</code> This helps to smoothly transfer reads between the sstables, reducing page cache churn and keeping hot rows hot (default: 50)</li>\n<li><code>node[:cassandra][:config][:memtable_allocation_type]</code> Specify the way Cassandra allocates and manages memtable memory (default: heap_buffers)</li>\n<li><code>node[:cassandra][:config][:index_summary_capacity_in_mb]</code> A fixed memory pool size in MB for for SSTable index summaries. If left empty, this will default to 5% of the heap size (default: nil)</li>\n<li><code>node[:cassandra][:config][:index_summary_resize_interval_in_minutes]</code> How frequently index summaries should be resampled (default: 60)</li>\n<li><code>node[:cassandra][:config][:concurrent_counter_writes]</code> Concurrent writes, since writes are almost never IO bound, the ideal number of \"concurrent_writes\" is dependent on the number of cores in your system; (8 * number_of_cores) (default: 32)</li>\n<li><code>node[:cassandra][:config][:counter_cache_save_period]</code> Duration in seconds after which Cassandra should save the counter cache (keys only) (default: 7200)</li>\n<li><code>node[:cassandra][:config][:counter_cache_size_in_mb]</code> Counter cache helps to reduce counter locks' contention for hot counter cells. Default value is empty to make it \"auto\" (min(2.5% of Heap (in MB), 50MB)). Set to 0 to disable counter cache. (default: nil)</li>\n<li><code>node[:cassandra][:config][:counter_write_request_timeout_in_ms]</code> How long the coordinator should wait for counter writes to complete (default: 5000)</li>\n<li><code>node[:cassandra][:config][:commit_failure_policy]</code> policy for commit disk failures (default: stop)</li>\n<li><code>node[:cassandra][:config][:cas_contention_timeout_in_ms]</code> How long a coordinator should continue to retry a CAS operation that contends with other proposals for the same row (default: 1000)</li>\n<li><code>node[:cassandra][:config][:batch_size_warn_threshold_in_kb]</code> Log WARN on any batch size exceeding this value. 5kb per batch by default (default: 5)</li>\n<li><code>node[:cassandra][:config][:batchlog_replay_throttle_in_kb]</code> Maximum throttle in KBs per second, total. This will be reduced proportionally to the number of nodes in the cluster (default: 1024)</li>\n</ul><h3><a id=\"user-content-jamm-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#jamm-attributes\"></a>JAMM Attributes</h3>\n<ul><li><code>node[:cassandra][:setup_jamm]</code> (default: false): install the jamm jar file and use it to set java option <code>-javaagent</code>, obsolete for C* versions <code>&gt;v0.8.0</code></li>\n<li><code>node[:cassandra][:jamm][:sha256sum]</code> (default: calculated): jamm lib sha256sum for calculated version</li>\n<li><code>node[:cassandra][:jamm][:base_url]</code> (default: calculated): jamm lib jar url</li>\n<li><code>node[:cassandra][:jamm][:jar_name]</code> (default: calculated): jamm lib jar name</li>\n<li><code>node[:cassandra][:jamm][:version]</code> (default: calculated): jamm lib version</li>\n</ul><h3><a id=\"user-content-jna-attributes-prior-c-version-210\" class=\"anchor\" aria-hidden=\"true\" href=\"#jna-attributes-prior-c-version-210\"></a>JNA Attributes (Prior C* version 2.1.0)</h3>\n<ul><li><code>node[:cassandra][:jna][:base_url]</code> The base url to fetch the JNA jar (default: <a href=\"https://github.com/twall/jna/tree/4.0/dist\">https://github.com/twall/jna/tree/4.0/dist</a>)</li>\n<li><code>node[:cassandra][:jna][:jar_name]</code> The name of the jar to download from the base url. (default: jna.jar)</li>\n<li><code>node[:cassandra][:jna][:sha256sum]</code> The SHA-256 checksum of the file. If the local jna.jar file matches the checksum, the chef-client will not re-download it. (default: dac270b6441ce24d93a96ddb6e8f93d8df099192738799a6f6fcfc2b2416ca19)</li>\n</ul><h3><a id=\"user-content-priam-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#priam-attributes\"></a>Priam Attributes</h3>\n<ul><li><code>node[:cassandra][:setup_priam]</code> (default: false): install the priam jar file and use it to set java option <code>-javaagent</code>, uses the priam version corresponding to the cassandra version</li>\n<li><code>node[:cassandra][:priam][:sha256sum]</code> (default: 9fde9a40dc5c538adee54f40fa9027cf3ebb7fd42e3592b3e6fdfe3f7aff81e1): priam lib sha256sum for version <code>2.2.0</code></li>\n<li><code>node[:cassandra][:priam][:base_url]</code> (default: priam url on maven.org): priam lib jar url</li>\n<li><code>node[:cassandra][:priam][:jar_name]</code> (default: calculated): priam lib jar name</li>\n</ul><h3><a id=\"user-content-logback-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#logback-attributes\"></a>Logback Attributes</h3>\n<ul><li><code>node[:cassandra][:logback][:file][:max_file_size]</code> (default: \"20MB\"): logback File appender log file rotation size</li>\n<li><code>node[:cassandra][:logback][:file][:max_index]</code> (default: 20): logback File appender log files max_index</li>\n<li><code>node[:cassandra][:logback][:file][:min_index]</code> (default: 1): logback File appender log files min_index</li>\n<li><code>node[:cassandra][:logback][:file][:pattern]</code> (default: \"%-5level [%thread] %date{ISO8601} %F:%L - %msg%n\"): logback File appender log pattern</li>\n<li><code>node[:cassandra][:logback][:debug][:enable]</code> (default: false): enable logback File appender log debug</li>\n<li><code>node[:cassandra][:logback][:debug][:max_file_size]</code> (default: \"20MB\"): logback File appender log file rotation size</li>\n<li><code>node[:cassandra][:logback][:debug][:max_index]</code> (default: 20): logback File appender log files max_index</li>\n<li><code>node[:cassandra][:logback][:debug][:min_index]</code> (default: 1): logback File appender log files min_index</li>\n<li><code>node[:cassandra][:logback][:debug][:pattern]</code> (default: \"%-5level [%thread] %date{ISO8601} %F:%L - %msg%n\"): logback File appender log pattern</li>\n<li><code>node[:cassandra][:logback][:stdout][:enable]</code> (default: true): enable logback STDOUT appender</li>\n<li><code>node[:cassandra][:logback][:stdout][:pattern]</code> (default: \"%-5level %date{HH:mm:ss,SSS} %msg%n\"): logback STDOUT appender log pattern</li>\n<li><code>node[:cassandra][:logback][:syslog][:enable]</code> (default: false): enable logback SYSLOG appender. Requires RSYSLOG be installed and running on the node.</li>\n<li><code>node[:cassandra][:logback][:syslog][:host]</code> (default: localhost): The host name the syslog is written to.</li>\n<li><code>node[:cassandra][:logback][:syslog][:facility]</code> (default: USER) The facility specified for the appender.</li>\n<li><code>node[:cassandra][:logback][:syslog][:pattern]</code> (default: \"%-5level [%thread] %F:%L - %msg%n\") lockback SYSLOG appender log pattern</li>\n<li><code>node[:cassandra][:logback][:override_loggers]</code> (default: {}) Override log level of specific logger (i.e { 'org.apache.cassandra.utils.StatusLogger' =&gt; 'WARN' })</li>\n</ul><h3><a id=\"user-content-ulimit-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#ulimit-attributes\"></a>Ulimit Attributes</h3>\n<ul><li><code>node[:cassandra][:limits][:memlock]</code> (default: \"unlimited\"): memory ulimit for Cassandra node process</li>\n<li><code>node[:cassandra][:limits][:nofile]</code> (default: 48000): file ulimit for Cassandra node process</li>\n<li><code>node[:cassandra][:limits][:nproc]</code> (default: \"unlimited\"): process ulimit for Cassandra node process</li>\n</ul><h3><a id=\"user-content-yum-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#yum-attributes\"></a>Yum Attributes</h3>\n<ul><li><code>node[:cassandra][:yum][:repo]</code> (default: datastax): name of the repo from which to install</li>\n<li><code>node[:cassandra][:yum][:description]</code> (default: \"DataStax Repo for Apache Cassandra\"): description of the repo</li>\n<li><code>node[:cassandra][:yum][:baseurl]</code> (default: \"<a href=\"http://rpm.datastax.com/community\" rel=\"nofollow\">http://rpm.datastax.com/community</a>\"): repo url</li>\n<li><code>node[:cassandra][:yum][:mirrorlist]</code> (default: nil): a mirrorlist file</li>\n<li><code>node[:cassandra][:yum][:gpgcheck]</code> (default: false): whether to use <code>gpgcheck</code></li>\n<li><code>node[:cassandra][:yum][:enabled]</code> (default: true): whether the repo is enabled by default</li>\n<li><code>node[:cassandra][:yum][:options]</code> (default: \"\"): Additional options to pass to <code>yum_package</code></li>\n</ul><h3><a id=\"user-content-opscenter-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#opscenter-attributes\"></a>OpsCenter Attributes</h3>\n<h4><a id=\"user-content-datastax-ops-center-server-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#datastax-ops-center-server-attributes\"></a>DataStax Ops Center Server attributes</h4>\n<ul><li><code>node[:cassandra][:opscenter][:server][:package_name]</code> (default: opscenter-free)</li>\n<li><code>node[:cassandra][:opscenter][:server][:port]</code> (default: 8888)</li>\n<li><code>node[:cassandra][:opscenter][:server][:interface]</code> (default: 0.0.0.0)</li>\n<li><code>node[:cassandra][:opscenter][:server][:authentication]</code> (default: false)</li>\n<li><code>node[:cassandra][:opscenter][:cassandra_metrics][:ignored_keyspaces]</code> (default: [system, OpsCenter])</li>\n<li><code>node[:cassandra][:opscenter][:cassandra_metrics][:ignored_column_families]</code> (default: [])</li>\n<li><code>node[:cassandra][:opscenter][:cassandra_metrics][:1min_ttl]</code> (default: 604800)</li>\n<li><code>node[:cassandra][:opscenter][:cassandra_metrics][:5min_ttl]</code> (default: 2419200)</li>\n<li><code>node[:cassandra][:opscenter][:cassandra_metrics][:2hr_ttl]</code> (default: 31536000)</li>\n<li><code>node[:cassandra][:opscenter][:custom_configuration]</code> (default: {}) a hash of custom configuration sections to add to <a href=\"https://docs.datastax.com/en/opscenter/6.0/opsc/configure/opscConfigProps_r.html\" rel=\"nofollow\">opscenterd.conf</a>, e.g.:</li>\n</ul><pre>{\n 'ui' =&gt; {\n   'default_api_timeout' =&gt; 300\n },\n 'stat_reporter' =&gt; {\n   'interval' =&gt; 1\n }\n}\n</pre>\n<h4><a id=\"user-content-datastax-ops-center-agent-tarball-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#datastax-ops-center-agent-tarball-attributes\"></a>DataStax Ops Center Agent Tarball attributes</h4>\n<ul><li><code>node[:cassandra][:opscenter][:agent][:download_url]</code> (default: \"\") Required. You need to specify\nagent download url, because that could be different for each opscenter server version. ( S3 is a great\nplace to store packages )</li>\n<li><code>node[:cassandra][:opscenter][:agent][:checksum]</code> (default: <code>nil</code>)</li>\n<li><code>node[:cassandra][:opscenter][:agent][:install_dir]</code> (default: <code>/opt</code>)</li>\n<li><code>node[:cassandra][:opscenter][:agent][:install_folder_name]</code> (default: <code>opscenter_agent</code>)</li>\n<li><code>node[:cassandra][:opscenter][:agent][:binary_name]</code> (default: <code>opscenter-agent</code>) Introduced since Datastax changed agent binary name from opscenter-agent to datastax-agent. <strong>Make sure to set it right if you are updating to 4.0.2</strong></li>\n<li><code>node[:cassandra][:opscenter][:agent][:server_host]</code> (default: \"\" ). If left empty, will use search to get IP by opscenter <code>server_role</code> role.</li>\n<li><code>node[:cassandra][:opscenter][:agent][:server_role]</code> (default: <code>opscenter_server</code>). Will be use for opscenter server IP lookup if <code>:server_host</code> is not set.</li>\n<li><code>node[:cassandra][:opscenter][:agent][:use_chef_search]</code> (default: <code>true</code>). Determines whether chef search will be used for locating the data agent server.</li>\n<li><code>node[:cassandra][:opscenter][:agent][:use_ssl]</code> (default: <code>false</code>)</li>\n</ul><h4><a id=\"user-content-datastax-ops-center-agent-datastax-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#datastax-ops-center-agent-datastax-attributes\"></a>DataStax Ops Center Agent Datastax attributes</h4>\n<ul><li><code>node[:cassandra][:opscenter][:agent][:package_name]</code> (default: \"datastax-agent\" ).</li>\n<li><code>node[:cassandra][:opscenter][:agent][:server_host]</code> (default: \"\" ). If left empty, will use search to get IP by opscenter <code>server_role</code> role.</li>\n<li><code>node[:cassandra][:opscenter][:agent][:server_role]</code> (default: <code>opscenter_server</code>). Will be use for opscenter server IP lookup if <code>:server_host</code> is not set.</li>\n<li><code>node[:cassandra][:opscenter][:agent][:use_ssl]</code> (default: <code>false</code>)</li>\n</ul><h3><a id=\"user-content-data-center-and-rack-attributes\" class=\"anchor\" aria-hidden=\"true\" href=\"#data-center-and-rack-attributes\"></a>Data Center and Rack Attributes</h3>\n<ul><li><code>node[:cassandra][:rackdc][:dc]</code> (default: \"\") The datacenter to specify in the cassandra-rackdc.properties file. (GossipingPropertyFileSnitch only)</li>\n<li><code>node[:cassandra][:rackdc][:rack]</code> (default: \"\") The rack to specify in the cassandra-rackdc.properties file (GossipingPropertyFileSnitch only)</li>\n<li><code>node[:cassandra][:rackdc][:prefer_local]</code> (default: \"false\") Whether the snitch will prefer the internal ip when possible, as the Ec2MultiRegionSnitch does. (GossipingPropertyFileSnitch only)</li>\n</ul><h2><a id=\"user-content-contributing\" class=\"anchor\" aria-hidden=\"true\" href=\"#contributing\"></a>Contributing</h2>\n<p>See <a href=\"https://github.com/michaelklishin/cassandra-chef-cookbook/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a> and <a href=\"https://github.com/michaelklishin/cassandra-chef-cookbook/blob/master/TESTING.md\">TESTING.md</a>.</p>\n<h2><a id=\"user-content-copyright--license\" class=\"anchor\" aria-hidden=\"true\" href=\"#copyright--license\"></a>Copyright &amp; License</h2>\n<p>Michael S. Klishin, Travis CI Development Team, and <a href=\"https://github.com/michaelklishin/cassandra-chef-cookbook/graphs/contributors\">contributors</a>,\n2012-2018.</p>\n<p>Released under the <a href=\"http://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"nofollow\">Apache 2.0 License</a>.</p>\n</article>"}}]}},"pageContext":{"alternative_id":12454}}