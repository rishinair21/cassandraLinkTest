{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Brief Introduction to Cassandra Query Language (CQL) - Cassandra Tutorial | Intellipaat.com","alternative_id":9340,"content":"<div class=\"post-navigation page-navigation clear clearfix\"><p>&#13;\n                                        <a href=\"https://intellipaat.com/tutorial/cassandra-tutorial/non-relational-cassandra-data-model/\" title=\"Non Relational Cassandra Data Model\">«  Previous</a>&#13;</p><p>&#13;\n                                    <a href=\"https://intellipaat.com/tutorial/cassandra-tutorial/cassandra-client-api/\" title=\"Cassandra Client API\">Next »</a>&#13;</p></div><p><a href=\"https://intellipaat.com/tutorial/cassandra-tutorial/\" target=\"_blank\">CQL</a> is simple api mean for accessing Cassandra.CQL adds an abstraction layer that hides implementation details of this structure and provides native syntaxes for collections and other common encodings.</p><p><strong> Common ways to access CQL are:</strong></p><p>• Start cqlsh, the Python-based command-line client, on the command line of a Cassandra node.</p><p>• For developing applications, use one of the C#, Java, or Python open-source drivers.</p><p>• Use the set_cql_version Thrift method for programmatic access</p><p>Below are common operation we can do with CQL</p><p><strong> 1.) Creating and using key space:</strong></p><p>cqlsh&gt; CREATE KEYSPACE demodb WITH REPLICATION = { ‘class’ :</p><p>‘NetworkTopologyStrategy’, ‘datacenter1’ : 3 };</p><p>USE demodb;</p><p><strong> 2.) Alter Key Space</strong></p><p>ALTER KEYSPACE ” demodb ” WITH REPLICATION = { ‘class’ : ‘SimpleStrategy’,</p><p>‘replication_factor’ : 2};</p><p><strong> 3.) Create Table </strong></p><p>CREATE TABLE emp ( empID int, deptID int, first_name varchar,last_name varchar, PRIMARY KEY (empID, deptID));</p><p><strong> 4.) Insert into table </strong></p><p>INSERT INTO emp (empID, deptID, first_name, last_name) VALUES (104, 15, ‘jane’, ‘smith’);</p><p><strong> 5.) Select query Select * from emp;</strong></p><p><strong>Scaling online library with Cassandra</strong></p><p>Let’s talk about a very simple example of online books library. In relation database the system will have multiple normalized schemas. Few of very important one are described below:</p><p><a href=\"https://cdn.intellipaat.com/wp-content/uploads/2015/08/img-6.png\"><img class=\"wp-image-22286 aligncenter\" src=\"https://cdn.intellipaat.com/wp-content/uploads/2015/08/img-6-460x341.png\" alt=\"img 6\" width=\"518\" height=\"383\" srcset=\"https://cdn.intellipaat.com/mediaFiles/2015/08/img-6-460x341.png 460w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-6-242x179.png 242w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-6-120x89.png 120w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-6-310x230.png 310w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-6.png 464w\" /></a></p><p>As with introduction of “free users” and “unlimited books at my dispose” features in online book library, popularity of app increased to great extend .Resultant was flood of customer data. These made <a href=\"https://intellipaat.com/tutorial/sql-tutorial/rdbms/\" target=\"_blank\">RDBMS</a> setup unstable and business decided to go with Cassandra to mitigate the issue.</p><p>Before designing <a href=\"https://intellipaat.com/cassandra-training/\" target=\"_blank\">Cassandra</a> table we need to find out all possible queries which key space shall support.</p><p>Most fired queries would be:</p><p>1.) Get books of category with availability &gt;0</p><p>2.) Get books from same author Queries for business point of view</p><p>3.) Get Customer liking per geographic location</p><p>4.) Most liked category</p><p>So in order to incorporate this quicker we need to de-normalize data and create new column families.</p><p><a href=\"https://cdn.intellipaat.com/wp-content/uploads/2015/08/img-7.png\"><img class=\"wp-image-22294 aligncenter\" src=\"https://cdn.intellipaat.com/wp-content/uploads/2015/08/img-7-460x454.png\" alt=\"img 7\" width=\"680\" height=\"671\" srcset=\"https://cdn.intellipaat.com/mediaFiles/2015/08/img-7-460x454.png 460w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-7-90x90.png 90w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-7-242x239.png 242w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-7-120x118.png 120w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-7-310x306.png 310w, https://cdn.intellipaat.com/mediaFiles/2015/08/img-7.png 534w\" /></a></p><p>A detailed understanding of <a href=\"https://intellipaat.com/blog/apache-cassandra-a-brief-intro/\" target=\"_blank\">Apache Cassandra</a> is available in this blog post for your perusal!</p><div class=\"row post-navigation page-navigation clear clearfix\"><p>&#13;\n                                                                    <a href=\"https://intellipaat.com/tutorial/cassandra-tutorial/non-relational-cassandra-data-model/\" title=\"Non Relational Cassandra Data Model\">«  Previous</a>&#13;</p><p>&#13;\n                                                                    <a href=\"https://intellipaat.com/tutorial/cassandra-tutorial/cassandra-client-api/\" title=\"Cassandra Client API\">Next »</a>&#13;</p></div>"}}]}},"pageContext":{"alternative_id":9340}}