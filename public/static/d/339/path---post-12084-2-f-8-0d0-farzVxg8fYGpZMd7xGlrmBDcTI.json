{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Apache Cassandra, Part 1: Introduction and Key Features","alternative_id":12084,"content":"<p id=\"05e2\" class=\"graf graf--p graf-after--h3\">This <a href=\"https://blog.emumba.com/apache-cassandra-part-1-introduction-and-key-features-18d02ba0b8cc\" data-href=\"https://blog.emumba.com/apache-cassandra-part-1-introduction-and-key-features-18d02ba0b8cc\" class=\"markup--anchor markup--p-anchor\" target=\"_blank\">series of posts</a> present an introduction to Apache Cassandra. It discusses key Cassandra features, its core concepts, how it works under the hood, how it is different from other data stores, data modelling best practices with examples, and some tips &amp; tricks.</p><p id=\"14aa\" class=\"graf graf--p graf-after--li\"><a href=\"http://cassandra.apache.org/\" data-href=\"http://cassandra.apache.org/\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">Cassandra</a> is a popular open source NoSQL database. It is being successfully used in a variety of scenarios like analytics, time series analysis, monitoring, retail, e-commerce, etc. One common overarching theme where you find Cassandra in use are environments with high write volumes.</p><h3 id=\"b4f2\" class=\"graf graf--h3 graf-after--p\">Key Cassandra Features</h3><p id=\"708e\" class=\"graf graf--p graf-after--h3\">Here are some of the key features of Cassandra.</p><ul class=\"postList\"><li id=\"9327\" class=\"graf graf--li graf-after--p\"><strong class=\"markup--strong markup--li-strong\">Distributed</strong>: Cassandra is built to run on a cluster of nodes to provide high availability, fault tolerance and scalability.</li><li id=\"945c\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Multi Master or Master Less</strong>: Many data stores e.g. MongoDB are based on a master slave architecture.</li></ul><figure id=\"2797\" class=\"graf graf--figure graf-after--li\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*vrwu71nrbG2tspuQA4pFFg.png\" data-width=\"400\" data-height=\"338\" src=\"https://cdn-images-1.medium.com/max/1600/1*vrwu71nrbG2tspuQA4pFFg.png\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://mobicon.tistory.com/142\" data-href=\"http://mobicon.tistory.com/142\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener noopener noopener noopener\" target=\"_blank\">http://mobicon.tistory.com/142</a></figcaption></figure><ul class=\"postList\"><li id=\"38a3\" class=\"graf graf--li graf-after--figure\">All the writes goes on a master node and reads are executed on slaves. On the other hand, Cassandra works in a master-less or multi master mode.</li></ul><figure id=\"ecbd\" class=\"graf graf--figure graf-after--li\"><div class=\"aspectRatioPlaceholder is-locked\"><img class=\"graf-image\" data-image-id=\"1*M5GYo7SpIusR0m9AG83-MQ.png\" data-width=\"400\" data-height=\"312\" data-is-featured=\"true\" src=\"https://cdn-images-1.medium.com/max/1600/1*M5GYo7SpIusR0m9AG83-MQ.png\" alt=\"image\" /></div><figcaption class=\"imageCaption\"><a href=\"http://mobicon.tistory.com/142\" data-href=\"http://mobicon.tistory.com/142\" class=\"markup--anchor markup--figure-anchor\" rel=\"nofollow noopener noopener\" target=\"_blank\">http://mobicon.tistory.com/142</a></figcaption></figure><ul class=\"postList\"><li id=\"be50\" class=\"graf graf--li graf-after--figure\">Writes are distributed among nodes using a hash function (more on this later) and reads are channeled onto specific nodes.</li><li id=\"1eb1\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">High Write Availability</strong>: When a master node goes down, MongoDB stops taking new writes until rest of the nodes choose a new master. On the other hand, in Cassandra, if one node goes down, the writes are redirected towards other nodes and the system continues to operate.</li><li id=\"2ea6\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Linear Scaling</strong>: due to its multi master architecture, Cassandra is linearly scalable, doubling the number of nodes in a cluster can handle twice the writes.</li><li id=\"d551\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Design Time Schema</strong>: Cassandra requires defining schema and data types at design time. Thatâ€™s not how Cassandra started, but it evolved and now you must define schema first.</li><li id=\"8f94\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Hot Writes in RAM</strong>: Cassandra stores incoming writes in RAM to provide speedy performance (more on this later).</li><li id=\"811b\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">AP system</strong>: Cassandra is considered highly available and partition tolerant system in terms of <a href=\"https://en.wikipedia.org/wiki/CAP_theorem\" data-href=\"https://en.wikipedia.org/wiki/CAP_theorem\" class=\"markup--anchor markup--li-anchor\" rel=\"noopener\" target=\"_blank\">CAP theorem</a>.</li><li id=\"e26d\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Column family Store</strong>: Cassandra is neither a row based store nor column oriented store, its a column family store which is a different concept. (More on this later)</li></ul><p id=\"3a31\" class=\"graf graf--p graf-after--li graf--trailing\"><a href=\"https://blog.emumba.com/apache-cassandra-part-2-cassandra-vs-mongodb-ab9d10ee10cb\" data-href=\"https://blog.emumba.com/apache-cassandra-part-2-cassandra-vs-mongodb-ab9d10ee10cb\" class=\"markup--anchor markup--p-anchor\" target=\"_blank\">Next: Apache Cassandra, Part 2: Cassandra vs MongoDB</a></p>"}}]}},"pageContext":{"alternative_id":12084}}