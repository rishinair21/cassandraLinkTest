{"data":{"allAnantCassandralinks":{"edges":[{"node":{"title":"Elasticsearch on Cassandra Features Overview - Instaclustr","alternative_id":12151,"content":"<p>Instaclustr recently announced coming availability of our Managed Service for <a href=\"http://www.elassandra.io/\">Elassandra</a>, which delivers Elasticsearch integrated with Apache Cassandra. This blog post drills down to explain the features and advantages of Elassandra – the best of Cassandra and ElasticSearch.</p><p>Elassandra adds the power of ElasticSearch’s fast, powerful indexing and querying to Cassandra.  By embedding Elasticsearch into Cassandra’s resilient, distributed architecture, Elassandra delivers a solution which combines the functionality of both Cassandra and Elasticsearch in a single integrated solution with improved availability features and simpler management.</p><p>Here are some of the key features:</p><ul><li><strong>Elassandra provides all the indexing and query capabilities of ElasticSearch</strong>.  This includes incredibly fast indexing, querying and analysis of structured and semistructured data.  It allows complex querying of large data sets.  Real-time indexing allows data to become searchable as soon as it is inserted into the database.</li> </ul><ul><li><strong>Powerful, flexible querying of Cassandra tables</strong>.  By design, Cassandra supports a relatively simple range of query operations, generally limited to simple primary key or range lookups.  Elassandra allows the full power of the Elasticsearch Query Language (Query DSL)  to be used to search data in Cassandra tables, including the ability to produce compound statements comprising filter and query blocks and relevance score calculations.</li> </ul><ul><li><strong>Elassandra is Cassandra</strong>.  At its core, Elassandra is the same engine as Cassandra and therefore is automatically part of the Cassandra ecosystem.  Tools and applications which work with Cassandra can be used with little or no change with Elassandra.  This means that the same familiar tools (e.g. nodetool, cqlsh) are used to manage Elassandra, and operations such as repair and compaction are done in the usual way.  Tools like Spark, Storm, Kafka and Zeppelin all work with Elassandra’s Cassandra API.</li> </ul><ul><li><strong>Elassandra is Elasticsearch</strong>.  Elassandra supports Elasticsearch’s RESTful API, and fits right into the Elassandra ecosystem.  Tools like Kibana, Logstash, Beats, JDBC driver, Spark and Kafka all work with Elassandra’s Elasticsearch API.</li> </ul><ul><li><strong>Flexible APIs</strong>.  Data can be loaded in Elassandra through Cassandra’s CQL, or via ElasticSearch’s RESTful API.  Regardless of which approach is used, Elassandra ensures that data is stored in a Cassandra table, and indexed in Elasticsearch.  A wide variety of language bindings can be used to access these APIs.  For CQL these include: Java, Python, Ruby, C#/.Net, Nodejs, PHP, C++, Closure, Scala, Clojure, Erlang, Go, Haskell &amp; Rust, and for Elasticsearch: Java, JavaScript, Groovy, .NET, PHP, Perl, Python, Ruby and others many other via JSON/RESTful interface.</li> </ul><ul><li><strong>Simplified data pipeline</strong>.  A single Elassandra cluster can do the work of several components: a Cassandra cluster, an ElasticSearch cluster, and ETL processes to replicate and synchronise between clusters.  Once transactional data is loaded into an Elassandra cluster, it can be searched directly without extra pipeline steps to load from Cassandra to Elassandra.</li> </ul><ul><li><strong>Masterless Distributed Architecture</strong>.   While standalone Elasticsearch has a master node, which introduces a single point of failure which must be carefully managed.  By running Elasticsearch on Cassandra’s fully distributed, masterless distributed architecture, the single point of failure is eliminated.</li> </ul><ul><li><strong>In Elassandra, Elasticsearch indexes are managed Cassandra as secondary indexes</strong>.  Elassandra fully supports other Cassandra features including: Cluster Replication between data centres; integration with Cassandra backups; and Integration with Cassandra node add/remove functions.</li> </ul><ul><li><strong>Provisioned in minutes, fully integrated, fully managed</strong>.  With Instaclustr, you can have an Elassandra cluster provisioned in minutes, and managed and supported by Instaclustr.  Optionally, your cluster can also be automatically fully configured and integrated with Zeppelin, Spark and Kibana, allowing you to quickly build and deploy your application.</li> </ul>"}}]}},"pageContext":{"alternative_id":12151}}